
Index: Registry/Registry.EM
===================================================================
--- Registry/Registry.EM	(revision 2592)
+++ Registry/Registry.EM	(working copy)
@@ -1667,11 +1667,11 @@
 halo HALO_0394 dyn_em 48:a,alpha,gamma,moist_2,mu_2,ph_2,t_2,u_2,v_2,w_2
 halo HALO_0616 dyn_em 48:mut,muu,muv,ru,rv,rw
 halo HALO_0626 dyn_em 8:al,alt,mut,muu,muv,p,php,ru,rv,rw,ww
-halo HALO_0637 dyn_em 8:mut,muu,muv,php,ru,rv,rw,ww
+halo HALO_0637 dyn_em 8:mut,muu,muv,php,ru,rv,rw,ww,alt
 halo HALO_0648 dyn_em 8:u_2,v_2
 halo HALO_0660 dyn_em 8:z
 halo HALO_0679 dyn_em 8:moist_2
-halo HALO_0718 dyn_em 8:al,mu_1,mu_2,p,pb,ph_2,php,t_1,t_save,u_save,v_save
+halo HALO_0718 dyn_em 8:al,mu_1,mu_2,p,pb,ph_2,php,t_1,t_save,u_save,v_save;4:mudf,alt
 halo HALO_0736 dyn_em 8:u_2,v_2
 halo HALO_0747 dyn_em 48:al,alt,moist_2,mu_1,mu_2,p,pb,ph_1,ph_2,php,t_1,t_2,u_1,u_2,v_1,v_2,w_1,w_2,ww
 halo HALO_0790 dyn_em 8:al,mu_2,mudf,muts,muus,muvs,p,ph_2
@@ -1768,7 +1768,7 @@
 halo HALO_3632 dyn_em 48:a_mu_2,a_mu_tend,a_mut,a_ph_2,a_ph_save,a_ru,a_rv,a_t_2,a_t_save,a_u_save,a_v_save,a_w_2,a_w_save,mut,ph_2,t_2,w_2
 halo HALO_3723 dyn_em 8:al,alt,mut,muu,muv,p,php,ru,rv,rw,ww
 halo HALO_3728 dyn_em 48:al,alt,mut,muu,muv,p,php,ru,rv,rw,ww
-halo HALO_3784 dyn_em 80:a_advect_tend,a_alt,a_cqu,a_cqv,a_cqw,a_moist_tend,a_mu_2,a_mu_tend,a_mut,a_muu,a_muv,a_p,a_ph_1,a_ph_2,a_ph_tend,a_php,a_ru,a_ru_tend,a_ru_tendf,a_rv,a_rv_tend,a_rv_tendf,a_rw,a_rw_tend,a_rw_tendf,a_t_1,a_t_2,a_t_tend,a_t_tendf,a_u_1,a_u_2,a_v_1,a_v_2,a_w_1,a_w_2,a_ww,al,alt,cosa,cqu,cqv,cqw,e,f,msft,msfu,msfv,mu_2,mub,mut,muu,muv,p,pb,ph_1,ph_2,phb,php,ru,rv,rw,t_1,t_2,t_init,u_1,u_2,v_1,v_2,w_1,w_2,ww
+halo HALO_3784 dyn_em 80:a_advect_tend,a_alt,a_cqu,a_cqv,a_cqw,a_moist_tend,a_mu_2,a_mu_tend,a_mut,a_muu,a_muv,a_p,a_ph_1,a_ph_2,a_ph_tend,a_php,a_ru,a_ru_tend,a_ru_tendf,a_rv,a_rv_tend,a_rv_tendf,a_rw,a_rw_tend,a_rw_tendf,a_t_1,a_t_2,a_t_tend,a_t_tendf,a_u_1,a_u_2,a_v_1,a_v_2,a_w_1,a_w_2,a_ww,al,alt,cosa,cqu,cqv,cqw,e,f,msft,msfu,msfv,mu_2,mub,mut,muu,muv,p,pb,ph_1,ph_2,phb,php,ru,rv,rw,t_1,t_2,t_init,u_1,u_2,v_1,v_2,w_1,w_2,ww,z,z_at_w,a_z,a_z_at_w,xland
 halo HALO_3803 dyn_em 80:a_alt,a_cqu,a_cqv,a_cqw,a_mu_2,a_mu_tend,a_mut,a_muu,a_muv,a_p,a_ph_1,a_ph_2,a_ph_tend,a_php,a_ru,a_ru_tend,a_ru_tendf,a_rv,a_rv_tend,a_rv_tendf,a_rw,a_rw_tend,a_rw_tendf,a_t_1,a_t_2,a_t_tend,a_t_tendf,a_u_1,a_u_2,a_v_1,a_v_2,a_w_1,a_w_2,a_ww,al,cqu,cqv,cqw,mu_2,muu,muv,p,ph_1,ph_2,php,ru,rv,rw,t_1,t_2,u_1,u_2,v_1,v_2,w_1,w_2,ww
 halo HALO_3886 dyn_em 48:al,alt,mut,muu,muv,p,php,ru,rv,rw,ww
 halo HALO_3898 dyn_em 8:al,alt,mut,muu,muv,p,php,ru,rv,rw,ww
Index: dyn_em/module_big_step_utilities_em_ad.F
===================================================================
--- dyn_em/module_big_step_utilities_em_ad.F	(revision 2592)
+++ dyn_em/module_big_step_utilities_em_ad.F	(working copy)
@@ -5967,7 +5967,10 @@
 
 !*************************************************************
 subroutine a_surface_drag(ru_tendf, a_ru_tendf, rv_tendf, a_rv_tendf, u, a_u, v, a_v, xland, muu, a_muu, muv, a_muv, z, &
-&a_z, z_at_w, a_z_at_w, ide, jde, ims, ime, jms, jme, kms, kme, its, ite, jts, jte, kts, kte )
+&a_z, z_at_w, a_z_at_w, &
+             ids, ide, jds, jde, kds, kde, &
+             ims, ime, jms, jme, kms, kme, &
+             its, ite, jts, jte, kts, kte )
 
 !USE module_big_step_utilities_em
 implicit none
@@ -5990,12 +5993,16 @@
 real, intent(inout) :: a_z(ims:ime,kms:kme,jms:jme)
 real, intent(inout) :: a_z_at_w(ims:ime,kms:kme,jms:jme)
 !real epsilon
+integer, intent(in) :: ids
 integer, intent(in) :: ide
 integer, intent(in) :: ite 
 integer, intent(in) :: its
+integer, intent(in) :: jds
 integer, intent(in) :: jde
 integer, intent(in) :: jte
 integer, intent(in) :: jts
+integer, intent(in) :: kde
+integer, intent(in) :: kds
 integer, intent(in) :: kte
 integer, intent(in) :: kts
 real, intent(in) :: muu(ims:ime,jms:jme)
@@ -6066,6 +6073,7 @@
 j_start = jts
 j_end = min(jte,jde-1)
 j_endv = jte
+#if 0
 do j = j_start, j_end
   do i = i_start, i_endu
     v0_u = sqrt(u(i,kts,j)**2+((v(i,kts,j)+v(i,kts,j+1)+v(i-1,kts,j)+v(i-1,kts,j+1))/4)**2)+epsilon
@@ -6114,6 +6122,7 @@
     end do
   end do
 end do
+#endif
 
 !----------------------------------------------
 ! ADJOINT COMPUTATIONS
@@ -6124,8 +6133,10 @@
 ! recompute : j_start
 ! recompute : j_end
 ! recompute : j_endv
-do j = j_endv, j_start, -1
-  do i = i_end, i_start, -1
+! TBH:  Redundant computation into halo region for X(i,j-1) = X(i,j-1) + ...
+do j = min(j_endv+1,jde), j_start, -1
+  ! TBH:  Redundant computation into halo region for X(i+1,j) = X(i+1,j) + ...
+  do i = i_end, max(i_start-1,ids), -1
     v0_v = sqrt(v(i,kts,j)**2+((u(i,kts,j)+u(i,kts,j-1)+u(i+1,kts,j)+u(i+1,kts,j-1))/4)**2)+epsilon
 ! recompute : v0_v
 ! recompute : v0_v
@@ -6203,8 +6214,10 @@
     a_v0_v = 0.
   end do
 end do
-do j = j_end, j_start, -1
-  do i = i_endu, i_start, -1
+! TBH:  Redundant computation into halo region for X(i,j+1) = X(i,j+1) + ...
+do j = j_end, max(j_start-1,jds), -1
+  ! TBH:  Redundant computation into halo region for X(i-1,j) = X(i-1,j) + ...
+  do i = min(i_endu+1,ide), i_start, -1
     v0_u = sqrt(u(i,kts,j)**2+((v(i,kts,j)+v(i,kts,j+1)+v(i-1,kts,j)+v(i-1,kts,j+1))/4)**2)+epsilon
 ! recompute : v0_u
 ! recompute : v0_u
Index: dyn_em/solve_em_ad.F
===================================================================
--- dyn_em/solve_em_ad.F	(revision 2592)
+++ dyn_em/solve_em_ad.F	(working copy)
@@ -4937,7 +5176,9 @@
   IF (rk_step == 1 ) then
 
  call a_surface_drag(ru_tendf, a_ru_tendf, rv_tendf, a_rv_tendf, u_2, a_u_2, v_2, a_v_2, xland, muu, a_muu, muv, a_muv, z, &
-&a_z, z_at_w, a_z_at_w, ide, jde, ims, ime, jms, jme, kms, kme,&
+&a_z, z_at_w, a_z_at_w, &
+        ids, ide, jds, jde, kds, kde, &
+        ims, ime, jms, jme, kms, kme, &
   grid%i_start(ij), grid%i_end(ij),                &
   grid%j_start(ij), grid%j_end(ij),                &
   k_start, k_end                                  )

