#!/bin/csh -f

set arglist=""
set compare_wrf = 0
set compare_var = 0
set compare_be = 0
setenv WRF_EM_CORE 1
setenv WRF_DA_CORE 0

if ( !  -e configure.wrf  ) then
  echo "You need to configure the code first."
  echo "Please do configure and then compile."
  exit 1
endif

foreach a ( $argv )
  if ( "$a" == "-h" ) then
    goto hlp
  else
#we probably needs to add consistent check here.

    set arglist = ( $arglist $a )

    if ( "$a" == "wrf" ) then
      set compare_wrf = 1
    else if ( "$a" == "em_real" ) then
      set compare_wrf = 1
    else if ( "$a" == "var" || "$a" == "pure_var" || "$a" == "k2n" || "$a" == "n2k" ) then
      set compare_wrf = 1
      set compare_var = 1
    else if ( "$a" == "be" ) then
      set compare_wrf = 1
      set compare_var = 1
      set compare_be = 1
    endif
  endif
end

if( $compare_wrf != 1 ) then
  echo "You need to compile corresponding to your configure option."
  echo "Type <compile wrf> to compile WRF model only"
  echo "Type <compile em_real> to compile WRF model and real"
  echo "Type <compile var> to compile wrfvar (and WRF frame)"
  echo "Type <compile pure_var> to compile wrfvar only (assume WRF frame has compiled)"
  echo "Type <compile be> to compile be"
  echo "Type <compile k2n> to compile convertor for converting KMA data to NetCDF data format"
  echo "Type <compile n2k> to compile convertor for converting NetCDF data to KMA data format"

  exit 2
endif

setenv WRF_EM_CORE 1
setenv WRF_DA_CORE 0
setenv WRF_GEN_BE 0

if($compare_be == 1) then
    setenv WRF_DA_CORE 1
    setenv WRF_GEN_BE 1
else if($compare_var == 1) then
    setenv WRF_DA_CORE 1
endif

if ( $arglist == "" ) then
  goto hlp
else
  unsetenv A2DCASE
  setenv A2DCASE `echo $arglist | grep 2d`

  if ( ! (   $?WRF_EM_CORE  || $?WRF_NMM_CORE || $?WRF_DA_CORE \
          ||  $?WRF_COAMPS_CORE || $?WRF_EXP_CORE )) then 
    echo 'None of WRF_EM_CORE, WRF_NMM_CORE, WRF_DA_CORE, '
    echo '        specified in shell environment.... '
    setenv WRF_EM_CORE 1
    setenv WRF_NMM_CORE 0
    setenv WRF_COAMPS_CORE 0
    setenv WRF_DA_CORE 0
    setenv WRF_EXP_CORE 0
  endif

# these settings get passed down through the environment in the
# calls to Make
  if ( ! $?WRF_EM_CORE )     setenv WRF_EM_CORE 0
  if ( ! $?WRF_NMM_CORE )    setenv WRF_NMM_CORE 0
  if ( ! $?WRF_COAMPS_CORE ) setenv WRF_COAMPS_CORE 0
  if ( ! $?WRF_EXP_CORE )    setenv WRF_EXP_CORE 0
  if ( ! $?WRF_DA_CORE )     setenv WRF_DA_CORE 0

  if ($WRF_EM_CORE == 1 && WRF_NMM_CORE == 1 ) then
    echo "Cannot compile both EM and NMM cores in same executable yet."
    exit 2
  endif

  if ($WRF_EM_CORE == 0 && WRF_NMM_CORE == 0 ) then
    echo "Cannot compile because both EM and NMM cores are set to 0."
    exit 2
  endif

  if (($WRF_EM_CORE == 1) && ($WRF_DA_CORE != 1)) then
    setenv REGISTRY Registry.EM
  endif

  if ($WRF_DA_CORE == 1)  then
    setenv REGISTRY Registry.wrfvar
  endif

  echo "WRF_GEN_BE = $WRF_GEN_BE"

  if ($WRF_NMM_CORE == 1) then
    grep -q DM_PARALLEL configure.wrf
    if ( $status == 1 ) then
      echo NMM_CORE must be configured for DM parallel
      echo Please rerun the configure script and chose a DM parallel option
      exit 3
    endif
    export REGISTRY=Registry.NMM
    # integrity check for a kludge where a hard coded value in the 
    # registry must match the same value in arch/preamble
    set registryvalue=`grep 'dimspec.* q ' Registry/$REGISTRY | sed -e 's/..*constant=//' -e 's/ ..*$//'`
    set preamblevalue=`grep 'DNMM_MAX_DIM=.*' arch/preamble | sed -e 's/..*-DNMM_MAX_DIM=//' -e 's/ ..*$//'`
    if ( $registryvalue != $preamblevalue ) then
      echo "Harded coded value of dimspec q in Registry ($registryvalue) does not"
      echo "equal the hard coded value of NMM_MAX_DIM in arch/preamble ($preamblevalue)"
      echo "Please fix and try again."
      exit 2
    endif
  endif

  echo " "
  echo -n "**** Compiling: "
  if ( $WRF_EM_CORE ) echo -n "WRF_EM_CORE "
  if ( $WRF_NMM_CORE ) echo -n "WRF_NMM_CORE "
  if ( $WRF_COAMPS_CORE ) echo -n "WRF_COAMPS_CORE "
  if ( $WRF_EXP_CORE ) echo -n "WRF_EXP_CORE "
  if ( $WRF_DA_CORE ) echo -n "WRF_DA_CORE "
  echo "."
  echo " "

  make -r $arglist A2DCASE="$A2DCASE"

endif

exit 0

hlp:

echo ' '
echo 'Usage:'
echo ' '
echo '   compile_new wrf           compile wrf in build dir (NOTE: no real.exe, ndown.exe, or ideal.exe generated)'
echo ' '
echo '   or choose a test case (see README_test_cases for details) :'
foreach d ( `/bin/ls test` )
  if ( "$d" != "CVS" ) then
    echo "      compile $d"
  endif
end
echo ' '
echo '  compile -h                 help message'


