subroutine a_rhs_ph( a_ph_tend, u, a_u, v, a_v, ww, a_ww, ph, a_ph, ph_old, a_ph_old, phb, w, a_w, mut, a_mut, muu, a_muu, muv, &
&a_muv, fnm, fnp, rdnw, cfn, cfn1, rdx, rdy, msft, non_hydrostatic, config_flags, ids, ide, jds, jde, kde, ims, ime, jms, jme, kms,&
& kme, its, ite, jts, jte, kts, kte )
!******************************************************************
!******************************************************************
!** This routine was generated by Automatic differentiation.     **
!** FastOpt: Transformation of Algorithm in Fortran, TAF 1.7.18  **
!******************************************************************
!******************************************************************
!==============================================
! all entries are defined explicitly
!==============================================
implicit none

!==============================================
! declare arguments
!==============================================
integer, intent(in) :: ime
integer, intent(in) :: ims
integer, intent(in) :: jme
integer, intent(in) :: jms
real, intent(inout) :: a_mut(ims:ime,jms:jme)
real, intent(inout) :: a_muu(ims:ime,jms:jme)
real, intent(inout) :: a_muv(ims:ime,jms:jme)
integer, intent(in) :: kme
integer, intent(in) :: kms
real, intent(inout) :: a_ph(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_ph_old(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_ph_tend(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_u(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_v(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_w(ims:ime,kms:kme,jms:jme)
real, intent(inout) :: a_ww(ims:ime,kms:kme,jms:jme)
real, intent(in) :: cfn
real, intent(in) :: cfn1
type (grid_config_rec_type), intent(in) :: config_flags
real, intent(in) :: fnm(kms:kme)
real, intent(in) :: fnp(kms:kme)
integer, intent(in) :: ide
integer, intent(in) :: ids
integer, intent(in) :: ite
integer, intent(in) :: its
integer, intent(in) :: jde
integer, intent(in) :: jds
integer, intent(in) :: jte
integer, intent(in) :: jts
integer, intent(in) :: kde
integer, intent(in) :: kte
integer, intent(in) :: kts
real, intent(in) :: msft(ims:ime,jms:jme)
real, intent(in) :: mut(ims:ime,jms:jme)
real, intent(in) :: muu(ims:ime,jms:jme)
real, intent(in) :: muv(ims:ime,jms:jme)
logical, intent(in) :: non_hydrostatic
real, intent(in) :: ph(ims:ime,kms:kme,jms:jme)
real, intent(in) :: ph_old(ims:ime,kms:kme,jms:jme)
real, intent(in) :: phb(ims:ime,kms:kme,jms:jme)
real, intent(in) :: rdnw(kms:kme)
real, intent(in) :: rdx
real, intent(in) :: rdy
real, intent(in) :: u(ims:ime,kms:kme,jms:jme)
real, intent(in) :: v(ims:ime,kms:kme,jms:jme)
real, intent(in) :: w(ims:ime,kms:kme,jms:jme)
real, intent(in) :: ww(ims:ime,kms:kme,jms:jme)

!==============================================
! declare local variables
!==============================================
real a_ub
real a_ul
real a_ur
real a_vb
real a_vl
real a_vr
real a_wdwn(its:ite,kts:kte)
integer advective_order
integer i
integer i_start
integer itf
integer j
integer j_start
integer jtf
integer k
integer kz
logical specified
real ub
real ul
real ur
real vb
real vl
real vr

!----------------------------------------------
! RESET LOCAL ADJOINT VARIABLES
!----------------------------------------------
a_ub = 0.
a_ul = 0.
a_ur = 0.
a_vb = 0.
a_vl = 0.
a_vr = 0.
a_wdwn(:,:) = 0.

!----------------------------------------------
! ROUTINE BODY
!----------------------------------------------
specified =  .false. 
! recompute : specified
if (config_flags%specified .or. config_flags%nested) then
  specified =  .true. 
endif
! recompute : specified
advective_order = config_flags%h_sca_adv_order
! recompute : advective_order
itf = min(ite,ide-1)
! recompute : itf
jtf = min(jte,jde-1)
! recompute : jtf
if (config_flags%open_xe .and. ite .eq. ide) then
  i = ite-1
! recompute : i
  do j = jtf, jts, -1
    k = kde
! recompute : k
    kz = k-1
! recompute : kz
    ub = 0.5*(fnm(kz)*(u(i+1,kz,j)+u(i,kz,j))+fnp(kz)*(u(i+1,kz-1,j)+u(i,kz-1,j)))
! recompute : ub
    ur = amax1(ub,0.)
! recompute : ur
    a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdx*ur*(ph_old(i,k,j)-ph_old(i-1,k,j))
    a_ph_old(i-1,k,j) = a_ph_old(i-1,k,j)+a_ph_tend(i,k,j)*rdx*mut(i,j)*ur
    a_ph_old(i,k,j) = a_ph_old(i,k,j)-a_ph_tend(i,k,j)*rdx*mut(i,j)*ur
    a_ur = a_ur-a_ph_tend(i,k,j)*rdx*mut(i,j)*(ph_old(i,k,j)-ph_old(i-1,k,j))
    a_ub = a_ub+a_ur*(0.5+sign(0.5,ub-0.))
    a_ur = 0.
    a_u(i+1,kz-1,j) = a_u(i+1,kz-1,j)+0.5*a_ub*fnp(kz)
    a_u(i,kz-1,j) = a_u(i,kz-1,j)+0.5*a_ub*fnp(kz)
    a_u(i+1,kz,j) = a_u(i+1,kz,j)+0.5*a_ub*fnm(kz)
    a_u(i,kz,j) = a_u(i,kz,j)+0.5*a_ub*fnm(kz)
    a_ub = 0.
    do k = 2, kde-1
      a_ub = 0.
      a_ur = 0.
      kz = k
! recompute : kz
      ub = 0.5*(fnm(kz)*(u(i+1,kz,j)+u(i,kz,j))+fnp(kz)*(u(i+1,kz-1,j)+u(i,kz-1,j)))
! recompute : ub
      ur = amax1(ub,0.)
! recompute : ur
      a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdx*ur*(ph_old(i,k,j)-ph_old(i-1,k,j))
      a_ph_old(i-1,k,j) = a_ph_old(i-1,k,j)+a_ph_tend(i,k,j)*rdx*mut(i,j)*ur
      a_ph_old(i,k,j) = a_ph_old(i,k,j)-a_ph_tend(i,k,j)*rdx*mut(i,j)*ur
      a_ur = a_ur-a_ph_tend(i,k,j)*rdx*mut(i,j)*(ph_old(i,k,j)-ph_old(i-1,k,j))
      a_ub = a_ub+a_ur*(0.5+sign(0.5,ub-0.))
      a_ur = 0.
      a_u(i+1,kz-1,j) = a_u(i+1,kz-1,j)+0.5*a_ub*fnp(kz)
      a_u(i,kz-1,j) = a_u(i,kz-1,j)+0.5*a_ub*fnp(kz)
      a_u(i+1,kz,j) = a_u(i+1,kz,j)+0.5*a_ub*fnm(kz)
      a_u(i,kz,j) = a_u(i,kz,j)+0.5*a_ub*fnm(kz)
      a_ub = 0.
    end do
  end do
endif
if (config_flags%open_xs .and. its .eq. ids) then
  i = its
! recompute : i
  do j = jtf, jts, -1
    k = kde
! recompute : k
    kz = k
! recompute : kz
    ub = 0.5*(fnm(kz)*(u(i+1,kz,j)+u(i,kz,j))+fnp(kz)*(u(i+1,kz-1,j)+u(i,kz-1,j)))
! recompute : ub
    ul = amin1(ub,0.)
! recompute : ul
    a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdx*ul*(ph_old(i+1,k,j)-ph_old(i,k,j))
    a_ph_old(i+1,k,j) = a_ph_old(i+1,k,j)-a_ph_tend(i,k,j)*rdx*mut(i,j)*ul
    a_ph_old(i,k,j) = a_ph_old(i,k,j)+a_ph_tend(i,k,j)*rdx*mut(i,j)*ul
    a_ul = a_ul-a_ph_tend(i,k,j)*rdx*mut(i,j)*(ph_old(i+1,k,j)-ph_old(i,k,j))
    a_ub = a_ub+a_ul*(0.5+sign(0.5,0.-ub))
    a_ul = 0.
    a_u(i+1,kz-1,j) = a_u(i+1,kz-1,j)+0.5*a_ub*fnp(kz)
    a_u(i,kz-1,j) = a_u(i,kz-1,j)+0.5*a_ub*fnp(kz)
    a_u(i+1,kz,j) = a_u(i+1,kz,j)+0.5*a_ub*fnm(kz)
    a_u(i,kz,j) = a_u(i,kz,j)+0.5*a_ub*fnm(kz)
    a_ub = 0.
    do k = 2, kde-1
      a_ub = 0.
      a_ul = 0.
      kz = k
! recompute : kz
      ub = 0.5*(fnm(kz)*(u(i+1,kz,j)+u(i,kz,j))+fnp(kz)*(u(i+1,kz-1,j)+u(i,kz-1,j)))
! recompute : ub
      ul = amin1(ub,0.)
! recompute : ul
      a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdx*ul*(ph_old(i+1,k,j)-ph_old(i,k,j))
      a_ph_old(i+1,k,j) = a_ph_old(i+1,k,j)-a_ph_tend(i,k,j)*rdx*mut(i,j)*ul
      a_ph_old(i,k,j) = a_ph_old(i,k,j)+a_ph_tend(i,k,j)*rdx*mut(i,j)*ul
      a_ul = a_ul-a_ph_tend(i,k,j)*rdx*mut(i,j)*(ph_old(i+1,k,j)-ph_old(i,k,j))
      a_ub = a_ub+a_ul*(0.5+sign(0.5,0.-ub))
      a_ul = 0.
      a_u(i+1,kz-1,j) = a_u(i+1,kz-1,j)+0.5*a_ub*fnp(kz)
      a_u(i,kz-1,j) = a_u(i,kz-1,j)+0.5*a_ub*fnp(kz)
      a_u(i+1,kz,j) = a_u(i+1,kz,j)+0.5*a_ub*fnm(kz)
      a_u(i,kz,j) = a_u(i,kz,j)+0.5*a_ub*fnm(kz)
      a_ub = 0.
    end do
  end do
endif
if (config_flags%open_ye .and. jte .eq. jde) then
  j = jte-1
! recompute : j
  do k = 2, kde
    a_vb = 0.
    a_vr = 0.
    kz = min(k,kde-1)
! recompute : kz
    do i = its, itf
      a_vb = 0.
      a_vr = 0.
      vb = 0.5*(fnm(kz)*(v(i,kz,j+1)+v(i,kz,j))+fnp(kz)*(v(i,kz-1,j+1)+v(i,kz-1,j)))
! recompute : vb
      vr = amax1(vb,0.)
! recompute : vr
      a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdy*vr*(ph_old(i,k,j)-ph_old(i,k,j-1))
      a_ph_old(i,k,j-1) = a_ph_old(i,k,j-1)+a_ph_tend(i,k,j)*rdy*mut(i,j)*vr
      a_ph_old(i,k,j) = a_ph_old(i,k,j)-a_ph_tend(i,k,j)*rdy*mut(i,j)*vr
      a_vr = a_vr-a_ph_tend(i,k,j)*rdy*mut(i,j)*(ph_old(i,k,j)-ph_old(i,k,j-1))
      a_vb = a_vb+a_vr*(0.5+sign(0.5,vb-0.))
      a_vr = 0.
      a_v(i,kz-1,j+1) = a_v(i,kz-1,j+1)+0.5*a_vb*fnp(kz)
      a_v(i,kz-1,j) = a_v(i,kz-1,j)+0.5*a_vb*fnp(kz)
      a_v(i,kz,j+1) = a_v(i,kz,j+1)+0.5*a_vb*fnm(kz)
      a_v(i,kz,j) = a_v(i,kz,j)+0.5*a_vb*fnm(kz)
      a_vb = 0.
    end do
  end do
endif
if (config_flags%open_ys .and. jts .eq. jds) then
  j = jts
! recompute : j
  do k = 2, kde
    a_vb = 0.
    a_vl = 0.
    kz = min(k,kde-1)
! recompute : kz
    do i = its, itf
      a_vb = 0.
      a_vl = 0.
      vb = 0.5*(fnm(kz)*(v(i,kz,j+1)+v(i,kz,j))+fnp(kz)*(v(i,kz-1,j+1)+v(i,kz-1,j)))
! recompute : vb
      vl = amin1(vb,0.)
! recompute : vl
      a_mut(i,j) = a_mut(i,j)-a_ph_tend(i,k,j)*rdy*vl*(ph_old(i,k,j+1)-ph_old(i,k,j))
      a_ph_old(i,k,j+1) = a_ph_old(i,k,j+1)-a_ph_tend(i,k,j)*rdy*mut(i,j)*vl
      a_ph_old(i,k,j) = a_ph_old(i,k,j)+a_ph_tend(i,k,j)*rdy*mut(i,j)*vl
      a_vl = a_vl-a_ph_tend(i,k,j)*rdy*mut(i,j)*(ph_old(i,k,j+1)-ph_old(i,k,j))
      a_vb = a_vb+a_vl*(0.5+sign(0.5,0.-vb))
      a_vl = 0.
      a_v(i,kz-1,j+1) = a_v(i,kz-1,j+1)+0.5*a_vb*fnp(kz)
      a_v(i,kz-1,j) = a_v(i,kz-1,j)+0.5*a_vb*fnp(kz)
      a_v(i,kz,j+1) = a_v(i,kz,j+1)+0.5*a_vb*fnm(kz)
      a_v(i,kz,j) = a_v(i,kz,j)+0.5*a_vb*fnm(kz)
      a_vb = 0.
    end do
  end do
endif
if (advective_order .le. 2) then
  i_start = its
! recompute : i_start
  j_start = jts
! recompute : j_start
  itf = min(ite,ide-1)
! recompute : itf
  jtf = min(jte,jde-1)
! recompute : jtf
  if (config_flags%open_xs .and. its .eq. ids) then
    i_start = its+1
  endif
! recompute : i_start
  if (config_flags%open_xe .and. ite .eq. ide) then
    itf = itf-1
  endif
! recompute : itf
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muu(i+1,j) = a_muu(i+1,j)-0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,&
&j)-ph(i,k,j))
      a_muu(i,j) = a_muu(i,j)-0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,&
&k,j))
      a_ph(i-1,k,j) = a_ph(i-1,k,j)+0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))
      a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))
      a_ph(i,k,j) = a_ph(i,k,j)-0.5*a_ph_tend(i,k,j)*rdx*((-(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))))+muu(i,j)*(cfn*u(i,k-&
&1,j)+cfn1*u(i,k-2,j)))
      a_u(i+1,k-2,j) = a_u(i+1,k-2,j)-0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn1*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,j)-ph(i,k,j))
      a_u(i,k-2,j) = a_u(i,k-2,j)-0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn1*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,k,j))
      a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,j)-ph(i,k,j))
      a_u(i,k-1,j) = a_u(i,k-1,j)-0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,k,j))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muu(i+1,j) = a_muu(i+1,j)-0.25*a_ph_tend(i,k,j)*rdx*(u(i+1,k,j)+u(i+1,k-1,j))*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,j)-ph(i,&
&k,j))
        a_muu(i,j) = a_muu(i,j)-0.25*a_ph_tend(i,k,j)*rdx*(u(i,k,j)+u(i,k-1,j))*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,k,j))
        a_ph(i-1,k,j) = a_ph(i-1,k,j)+0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(u(i,k,j)+u(i,k-1,j))
        a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))
        a_ph(i,k,j) = a_ph(i,k,j)-0.25*a_ph_tend(i,k,j)*rdx*((-(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))))+muu(i,j)*(u(i,k,j)+u(i,k-1,&
&j)))
        a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,j)-ph(i,k,j))
        a_u(i,k-1,j) = a_u(i,k-1,j)-0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,k,j))
        a_u(i+1,k,j) = a_u(i+1,k,j)-0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(phb(i+1,k,j)-phb(i,k,j)+ph(i+1,k,j)-ph(i,k,j))
        a_u(i,k,j) = a_u(i,k,j)-0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(phb(i,k,j)-phb(i-1,k,j)+ph(i,k,j)-ph(i-1,k,j))
      end do
    end do
  end do
! recdepend vars : its
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1407
! recompute vars : i_start
  i_start = its
! recompute vars : i_start
! recdepend vars : i_start,jts
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1408
! recompute vars : j_start
  j_start = jts
! recompute vars : j_start
! recdepend vars : i_start,ide,ite,j_start
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1409
! recompute vars : itf
  itf = min(ite,ide-1)
! recompute vars : itf
! recdepend vars : i_start,itf,j_start,jde,jte
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1410
! recompute vars : jtf
  jtf = min(jte,jde-1)
! recompute vars : jtf
! recdepend vars : config_flags,i_start,itf,j_start,jds,jtf,jts
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1412
! recompute vars : j_start
  if (config_flags%open_ys .and. jts .eq. jds) then
    j_start = jts+1
  endif
! recompute vars : j_start
! recdepend vars : config_flags,i_start,itf,j_start,jde,jte,jtf
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1413
! recompute vars : jtf
  if (config_flags%open_ye .and. jte .eq. jde) then
    jtf = jtf-1
  endif
! recompute vars : jtf
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muv(i,j+1) = a_muv(i,j+1)-0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+&
&1)-ph(i,k,j))
      a_muv(i,j) = a_muv(i,j)-0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,&
&j-1))
      a_ph(i,k,j-1) = a_ph(i,k,j-1)+0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))
      a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))
      a_ph(i,k,j) = a_ph(i,k,j)-0.5*a_ph_tend(i,k,j)*rdy*((-(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))))+muv(i,j)*(cfn*v(i,k-&
&1,j)+cfn1*v(i,k-2,j)))
      a_v(i,k-2,j+1) = a_v(i,k-2,j+1)-0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn1*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+1)-ph(i,k,j))
      a_v(i,k-2,j) = a_v(i,k-2,j)-0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn1*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,j-1))
      a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+1)-ph(i,k,j))
      a_v(i,k-1,j) = a_v(i,k-1,j)-0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,j-1))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muv(i,j+1) = a_muv(i,j+1)-0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j+1)+v(i,k-1,j+1))*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+1)-ph(i,&
&k,j))
        a_muv(i,j) = a_muv(i,j)-0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j)+v(i,k-1,j))*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,j-1))
        a_ph(i,k,j-1) = a_ph(i,k,j-1)+0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(v(i,k,j)+v(i,k-1,j))
        a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))
        a_ph(i,k,j) = a_ph(i,k,j)-0.25*a_ph_tend(i,k,j)*rdy*((-(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))))+muv(i,j)*(v(i,k,j)+v(i,k-1,&
&j)))
        a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+1)-ph(i,k,j))
        a_v(i,k-1,j) = a_v(i,k-1,j)-0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,j-1))
        a_v(i,k,j+1) = a_v(i,k,j+1)-0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(phb(i,k,j+1)-phb(i,k,j)+ph(i,k,j+1)-ph(i,k,j))
        a_v(i,k,j) = a_v(i,k,j)-0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(phb(i,k,j)-phb(i,k,j-1)+ph(i,k,j)-ph(i,k,j-1))
      end do
    end do
  end do
else if (advective_order .le. 4) then
  i_start = its
! recompute : i_start
  j_start = jts
! recompute : j_start
  itf = min(ite,ide-1)
! recompute : itf
  jtf = min(jte,jde-1)
! recompute : jtf
  if (config_flags%open_xs .and. its .eq. ids) then
    i_start = its+1
  endif
! recompute : i_start
  if (config_flags%open_xe .and. ite .eq. ide) then
    itf = itf-1
  endif
! recompute : itf
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-&
&1,k,j))-(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_muu(i,j) = a_muu(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_u(i+1,k-2,j) = a_u(i+1,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-2,j) = a_u(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i+1,k,j)+u(i+1,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_muu(i,j) = a_muu(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i,k,j)+u(i,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,&
&k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,&
&j)+u(i,k-1,j)))
        a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)&
&+u(i,k-1,j)))
        a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)&
&-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-&
&2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i+1,k,j) = a_u(i+1,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k,j) = a_u(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-2,k,&
&j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      end do
    end do
  end do
! recdepend vars : its
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1475
! recompute vars : i_start
  i_start = its
! recompute vars : i_start
! recdepend vars : i_start,jts
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1476
! recompute vars : j_start
  j_start = jts
! recompute vars : j_start
! recdepend vars : i_start,ide,ite,j_start
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1477
! recompute vars : itf
  itf = min(ite,ide-1)
! recompute vars : itf
! recdepend vars : i_start,itf,j_start,jde,jte
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1478
! recompute vars : jtf
  jtf = min(jte,jde-1)
! recompute vars : jtf
! recdepend vars : config_flags,i_start,itf,j_start,jds,jtf,jts
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1480
! recompute vars : j_start
  if (config_flags%open_ys .and. jts .eq. jds) then
    j_start = jts+1
  endif
! recompute vars : j_start
! recdepend vars : config_flags,i_start,itf,j_start,jde,jte,jtf
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1481
! recompute vars : jtf
  if (config_flags%open_ye .and. jte .eq. jde) then
    jtf = jtf-1
  endif
! recompute vars : jtf
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))*(8.*(ph(i,k,j+1)-ph(i,&
&k,j-1))-(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_muv(i,j) = a_muv(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_v(i,k-2,j+1) = a_v(i,k-2,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-2,j) = a_v(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j+1)+v(i,k-1,j+1))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_muv(i,j) = a_muv(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j)+v(i,k-1,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,&
&j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,&
&j)+v(i,k-1,j)))
        a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)&
&+v(i,k-1,j)))
        a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)&
&-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,&
&k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j+1) = a_v(i,k,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j) = a_v(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,k,j-&
&2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      end do
    end do
  end do
else if (advective_order .le. 6) then
  i_start = its
! recompute : i_start
  j_start = jts
! recompute : j_start
  itf = min(ite,ide-1)
! recompute : itf
  jtf = min(jte,jde-1)
! recompute : jtf
  if (config_flags%open_xs .or. specified) then
    i_start = max(its,ids+2)
  endif
! recompute : i_start
  if (config_flags%open_xe .or. specified) then
    itf = min(itf,ide-3)
  endif
! recompute : itf
  if (config_flags%open_xe .and. ite .ge. ide-2) then
    i = ide-2
! recompute : i
    do j = jtf, j_start, -1
      k = kte
! recompute : k
      a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-&
&1,k,j))-(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_muu(i,j) = a_muu(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_u(i+1,k-2,j) = a_u(i+1,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-2,j) = a_u(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      do k = 2, kte-1
        a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i+1,k,j)+u(i+1,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_muu(i,j) = a_muu(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i,k,j)+u(i,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,&
&k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,&
&j)+u(i,k-1,j)))
        a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)&
&+u(i,k-1,j)))
        a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)&
&-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-&
&2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i+1,k,j) = a_u(i+1,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k,j) = a_u(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-2,k,&
&j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      end do
    end do
  endif
  if (config_flags%open_xs .and. its .le. ids+1) then
    i = ids+1
! recompute : i
    do j = jtf, j_start, -1
      k = kte
! recompute : k
      a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-&
&1,k,j))-(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_muu(i,j) = a_muu(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_u(i+1,k-2,j) = a_u(i+1,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-2,j) = a_u(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn1*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,&
&j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      do k = 2, kte-1
        a_muu(i+1,j) = a_muu(i+1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i+1,k,j)+u(i+1,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&(ph(i+2,k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_muu(i,j) = a_muu(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(u(i,k,j)+u(i,k-1,j))*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,&
&k,j)-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,&
&j)+u(i,k-1,j)))
        a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.66666667*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)&
&+u(i,k-1,j)))
        a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)&
&-ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k-1,j) = a_u(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-&
&2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i+1,k,j) = a_u(i+1,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-&
&ph(i-2,k,j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
        a_u(i,k,j) = a_u(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(8.*(ph(i+1,k,j)-ph(i-1,k,j))-(ph(i+2,k,j)-ph(i-2,k,&
&j))+8.*(phb(i+1,k,j)-phb(i-1,k,j))-(phb(i+2,k,j)-phb(i-2,k,j)))
      end do
    end do
  endif
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muu(i+1,j) = a_muu(i+1,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))*(45.*(ph(i+1,k,j)-ph(i-&
&1,k,j))-9.*(ph(i+2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+&
&phb(i+3,k,j)-phb(i-3,k,j))
      a_muu(i,j) = a_muu(i,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j))*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&9.*(ph(i+2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,&
&k,j)-phb(i-3,k,j))
      a_ph(i-3,k,j) = a_ph(i-3,k,j)-(-0.016666667)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,&
&j)*(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.15*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*(cfn*&
&u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.75)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+3,k,j) = a_ph(i+3,k,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.15)*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*&
&(cfn*u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.75*0.5*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(cfn*u(i+1,k-1,j)+cfn1*u(i+1,k-2,j))+muu(i,j)*(cfn*&
&u(i,k-1,j)+cfn1*u(i,k-2,j)))
      a_u(i+1,k-2,j) = a_u(i+1,k-2,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn1*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+&
&2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-&
&phb(i-3,k,j))
      a_u(i,k-2,j) = a_u(i,k-2,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn1*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,k,j)&
&-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
      a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*cfn*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+&
&2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-&
&phb(i-3,k,j))
      a_u(i,k-1,j) = a_u(i,k-1,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdx*muu(i,j)*cfn*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,k,j)-&
&ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muu(i+1,j) = a_muu(i+1,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*(u(i+1,k,j)+u(i+1,k-1,j))*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-&
&9.*(ph(i+2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+&
&3,k,j)-phb(i-3,k,j))
        a_muu(i,j) = a_muu(i,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*(u(i,k,j)+u(i,k-1,j))*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*&
&(ph(i+2,k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,&
&k,j)-phb(i-3,k,j))
        a_ph(i-3,k,j) = a_ph(i-3,k,j)-(-0.016666667)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,&
&k,j)+u(i,k-1,j)))
        a_ph(i-2,k,j) = a_ph(i-2,k,j)-0.15*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)+u(i,&
&k-1,j)))
        a_ph(i-1,k,j) = a_ph(i-1,k,j)-(-0.75)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)+&
&u(i,k-1,j)))
        a_ph(i+3,k,j) = a_ph(i+3,k,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,&
&j)+u(i,k-1,j)))
        a_ph(i+2,k,j) = a_ph(i+2,k,j)-(-0.15)*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)+&
&u(i,k-1,j)))
        a_ph(i+1,k,j) = a_ph(i+1,k,j)-0.75*0.25*a_ph_tend(i,k,j)*rdx*(muu(i+1,j)*(u(i+1,k,j)+u(i+1,k-1,j))+muu(i,j)*(u(i,k,j)+u(i,&
&k-1,j)))
        a_u(i+1,k-1,j) = a_u(i+1,k-1,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,&
&k,j)-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
        a_u(i,k-1,j) = a_u(i,k-1,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,k,j)-&
&ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
        a_u(i+1,k,j) = a_u(i+1,k,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*muu(i+1,j)*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,k,j)&
&-ph(i-2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
        a_u(i,k,j) = a_u(i,k,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdx*muu(i,j)*(45.*(ph(i+1,k,j)-ph(i-1,k,j))-9.*(ph(i+2,k,j)-ph(i-&
&2,k,j))+ph(i+3,k,j)-ph(i-3,k,j)+45.*(phb(i+1,k,j)-phb(i-1,k,j))-9.*(phb(i+2,k,j)-phb(i-2,k,j))+phb(i+3,k,j)-phb(i-3,k,j))
      end do
    end do
  end do
! recdepend vars : its
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1555
! recompute vars : i_start
  i_start = its
! recompute vars : i_start
! recdepend vars : i_start,ide,ite
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1557
! recompute vars : itf
  itf = min(ite,ide-1)
! recompute vars : itf
  if (config_flags%open_ye .and. jte .ge. jde-2) then
    j = jde-2
! recompute : j
    k = kte
! recompute : k
    do i = i_start, itf
      a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))*(8.*(ph(i,k,j+1)-ph(i,&
&k,j-1))-(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_muv(i,j) = a_muv(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_v(i,k-2,j+1) = a_v(i,k-2,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-2,j) = a_v(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j+1)+v(i,k-1,j+1))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_muv(i,j) = a_muv(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j)+v(i,k-1,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,&
&j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,&
&j)+v(i,k-1,j)))
        a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)&
&+v(i,k-1,j)))
        a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)&
&-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,&
&k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j+1) = a_v(i,k,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j) = a_v(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,k,j-&
&2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      end do
    end do
  endif
! recdepend vars : its
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1555
! recompute vars : i_start
  i_start = its
! recompute vars : i_start
! recdepend vars : i_start,ide,ite
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1557
! recompute vars : itf
  itf = min(ite,ide-1)
! recompute vars : itf
  if (config_flags%open_ys .and. jts .le. jds+1) then
    j = jds+1
! recompute : j
    k = kte
! recompute : k
    do i = i_start, itf
      a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))*(8.*(ph(i,k,j+1)-ph(i,&
&k,j-1))-(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_muv(i,j) = a_muv(i,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_v(i,k-2,j+1) = a_v(i,k-2,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-2,j) = a_v(i,k-2,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn1*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+&
&2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muv(i,j+1) = a_muv(i,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j+1)+v(i,k-1,j+1))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&(ph(i,k,j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_muv(i,j) = a_muv(i,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j)+v(i,k-1,j))*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,&
&j+2)-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,&
&j)+v(i,k-1,j)))
        a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.66666667)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.083333333)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.66666667*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)&
&+v(i,k-1,j)))
        a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)&
&-ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k-1,j) = a_v(i,k-1,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,&
&k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j+1) = a_v(i,k,j+1)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-&
&ph(i,k,j-2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
        a_v(i,k,j) = a_v(i,k,j)-0.083333333*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(8.*(ph(i,k,j+1)-ph(i,k,j-1))-(ph(i,k,j+2)-ph(i,k,j-&
&2))+8.*(phb(i,k,j+1)-phb(i,k,j-1))-(phb(i,k,j+2)-phb(i,k,j-2)))
      end do
    end do
  endif
! recdepend vars : its
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1555
! recompute vars : i_start
  i_start = its
! recompute vars : i_start
! recdepend vars : i_start,jts
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1556
! recompute vars : j_start
  j_start = jts
! recompute vars : j_start
! recdepend vars : i_start,ide,ite,j_start
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1557
! recompute vars : itf
  itf = min(ite,ide-1)
! recompute vars : itf
! recdepend vars : i_start,itf,j_start,jde,jte
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1558
! recompute vars : jtf
  jtf = min(jte,jde-1)
! recompute vars : jtf
!  recdepend vars : config_flags,i_start,itf,j_start,jds,jtf,jts,specifi
! ed
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1563
! recompute vars : j_start
  if (config_flags%open_ys .or. specified) then
    j_start = max(jts,jds+2)
  endif
! recompute vars : j_start
! recdepend vars : config_flags,i_start,itf,j_start,jde,jtf,specified
! recompute pos : IF_STMT module_big_step_utilities_em.f90:1564
! recompute vars : jtf
  if (config_flags%open_ye .or. specified) then
    jtf = min(jtf,jde-3)
  endif
! recompute vars : jtf
  do j = jtf, j_start, -1
    k = kte
! recompute : k
    do i = i_start, itf
      a_muv(i,j+1) = a_muv(i,j+1)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))*(45.*(ph(i,k,j+1)-ph(i,&
&k,j-1))-9.*(ph(i,k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+&
&phb(i,k,j+3)-phb(i,k,j-3))
      a_muv(i,j) = a_muv(i,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j))*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&9.*(ph(i,k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,&
&j+3)-phb(i,k,j-3))
      a_ph(i,k,j-3) = a_ph(i,k,j-3)-(-0.016666667)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,&
&j)*(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.15*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*(cfn*&
&v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.75)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+3) = a_ph(i,k,j+3)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.15)*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*&
&(cfn*v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.75*0.5*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(cfn*v(i,k-1,j+1)+cfn1*v(i,k-2,j+1))+muv(i,j)*(cfn*&
&v(i,k-1,j)+cfn1*v(i,k-2,j)))
      a_v(i,k-2,j+1) = a_v(i,k-2,j+1)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn1*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,&
&k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-&
&phb(i,k,j-3))
      a_v(i,k-2,j) = a_v(i,k-2,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn1*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,j+2)&
&-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
      a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*cfn*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,&
&k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-&
&phb(i,k,j-3))
      a_v(i,k-1,j) = a_v(i,k-1,j)-0.016666667*0.5*a_ph_tend(i,k,j)*rdy*muv(i,j)*cfn*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,j+2)-&
&ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
    end do
    do k = 2, kte-1
      do i = i_start, itf
        a_muv(i,j+1) = a_muv(i,j+1)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j+1)+v(i,k-1,j+1))*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-&
&9.*(ph(i,k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,&
&k,j+3)-phb(i,k,j-3))
        a_muv(i,j) = a_muv(i,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*(v(i,k,j)+v(i,k-1,j))*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*&
&(ph(i,k,j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,&
&j+3)-phb(i,k,j-3))
        a_ph(i,k,j-3) = a_ph(i,k,j-3)-(-0.016666667)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,&
&k,j)+v(i,k-1,j)))
        a_ph(i,k,j-2) = a_ph(i,k,j-2)-0.15*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)+v(i,&
&k-1,j)))
        a_ph(i,k,j-1) = a_ph(i,k,j-1)-(-0.75)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)+&
&v(i,k-1,j)))
        a_ph(i,k,j+3) = a_ph(i,k,j+3)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,&
&j)+v(i,k-1,j)))
        a_ph(i,k,j+2) = a_ph(i,k,j+2)-(-0.15)*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)+&
&v(i,k-1,j)))
        a_ph(i,k,j+1) = a_ph(i,k,j+1)-0.75*0.25*a_ph_tend(i,k,j)*rdy*(muv(i,j+1)*(v(i,k,j+1)+v(i,k-1,j+1))+muv(i,j)*(v(i,k,j)+v(i,&
&k-1,j)))
        a_v(i,k-1,j+1) = a_v(i,k-1,j+1)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,&
&j+2)-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
        a_v(i,k-1,j) = a_v(i,k-1,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,j+2)-&
&ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
        a_v(i,k,j+1) = a_v(i,k,j+1)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j+1)*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,j+2)&
&-ph(i,k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
        a_v(i,k,j) = a_v(i,k,j)-0.016666667*0.25*a_ph_tend(i,k,j)*rdy*muv(i,j)*(45.*(ph(i,k,j+1)-ph(i,k,j-1))-9.*(ph(i,k,j+2)-ph(i,&
&k,j-2))+ph(i,k,j+3)-ph(i,k,j-3)+45.*(phb(i,k,j+1)-phb(i,k,j-1))-9.*(phb(i,k,j+2)-phb(i,k,j-2))+phb(i,k,j+3)-phb(i,k,j-3))
      end do
    end do
  end do
endif
! recdepend vars : ide,ite
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1362
! recompute vars : itf
itf = min(ite,ide-1)
! recompute vars : itf
! recdepend vars : itf,jde,jte
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1363
! recompute vars : jtf
jtf = min(jte,jde-1)
! recompute vars : jtf
if (non_hydrostatic) then
  do j = jts, jtf
    do k = 2, kte
      do i = its, itf
        a_mut(i,j) = a_mut(i,j)+a_ph_tend(i,k,j)*(g*w(i,k,j)/msft(i,j))
        a_w(i,k,j) = a_w(i,k,j)+a_ph_tend(i,k,j)*(mut(i,j)*g/msft(i,j))
      end do
    end do
    do i = its, itf
      a_ph_tend(i,kde,j) = 0.
    end do
  end do
endif
! recdepend vars : ide,ite
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1362
! recompute vars : itf
itf = min(ite,ide-1)
! recompute vars : itf
! recdepend vars : itf,jde,jte
! recompute pos : ASSIGN_STMT module_big_step_utilities_em.f90:1363
! recompute vars : jtf
jtf = min(jte,jde-1)
! recompute vars : jtf
do j = jts, jtf
  do k = 2, kte-1
    do i = its, itf
      a_wdwn(i,k+1) = a_wdwn(i,k+1)-a_ph_tend(i,k,j)*fnm(k)
      a_wdwn(i,k) = a_wdwn(i,k)-a_ph_tend(i,k,j)*fnp(k)
    end do
  end do
  do k = 2, kte
    do i = its, itf
      a_ph(i,k-1,j) = a_ph(i,k-1,j)-0.5*a_wdwn(i,k)*(ww(i,k,j)+ww(i,k-1,j))*rdnw(k-1)
      a_ph(i,k,j) = a_ph(i,k,j)+0.5*a_wdwn(i,k)*(ww(i,k,j)+ww(i,k-1,j))*rdnw(k-1)
      a_ww(i,k-1,j) = a_ww(i,k-1,j)+0.5*a_wdwn(i,k)*rdnw(k-1)*(ph(i,k,j)-ph(i,k-1,j)+phb(i,k,j)-phb(i,k-1,j))
      a_ww(i,k,j) = a_ww(i,k,j)+0.5*a_wdwn(i,k)*rdnw(k-1)*(ph(i,k,j)-ph(i,k-1,j)+phb(i,k,j)-phb(i,k-1,j))
      a_wdwn(i,k) = 0.
    end do
  end do
end do

end subroutine a_rhs_ph
