#!/bin/sh -x
#$ -N gsiBinary
#$ -S /bin/bash
#  Make sure that the .e and .o file arrive in the working directory
#$ -cwd
#$ -r y
##$ -pe comp 76
#$ -pe ecomp 76
##$ -pe pvfs 76
#$ -l h_rt=00:30:00
#$ -A nhra

export F_UFMTENDIAN="big\;little:10,15,66"
export GMPIENVVAR=F_UFMTENDIAN

# Set experiment name and analysis date
exp=gsiBinary
#adate=2004072712
adate=2006030800

# Set path/file for gsi executable
gsiexec=/p60/acb/users/jacquesm/gsiEjet9.0/gsi/gsi.x

# Set resoltion and other dependent parameters
export JCAP=62
export LEVS=60
export DELTIM=${DELTIM:-$((3600/($JCAP/20)))}


# Set runtime and save directories
tmpdir=/p60/acb/users/jacquesm/gsiEjet9.0/runMassBinary/tmpdirEjet76
savdir=/p60/acb/users/jacquesm/gsiEjet9.0/runMassBinary/savdirEjet76

# Specify fixed field and data directories.
fixdir=/p70/wrfruc/users/chem/GSI/GSI_param
fixgsi=/p60/acb/users/jacquesm/gsiData/fix
txtgsi1=/p70/wrfruc/users/chem/GSI/GSI_param/gsi_info

#datobs=/p70/wrfruc/GSI_data/mass-netcdf/wrf_mass_netcdf_case
datobs=/el1/projects/wrfruc/GSI/GSI_data_new/mass-binary/binary
datges=$datobs
dataobs=/p60/acb/users/jacquesm/gsiData/dataMassNetCDF
export NET=fnl


# Set variables used in script
#   CLEAN up $tmpdir when finished (YES=remove, NO=leave alone)
#   ncp is a fast copy using rcp between NCEP IBM nodes
#     (ncp does not yet work on blue, redefine ncp=/bin/cp)
#   ndate is a date manipulation utility

CLEAN=NO
##ncp=/u/wx20mi/bin/ncp
ncp=/bin/cp
#ndate=/p70/wrfruc/gsi/bin/ndate


# Given the analysis date, compute the date from which the
# first guess comes.  Extract cycle and set prefix and suffix
# for guess and observation data files
#gdate=`$ndate -06 $adate`
#cca=`echo $adate | cut -c9-10`
#ccg=`echo $gdate | cut -c9-10`
#prefixa=gblav.t${cca}z
#prefixg=gblav.t${ccg}z
suffix=tm00.bufr_d

# Set up $tmpdir
rm -rf $tmpdir
mkdir -p $tmpdir
cd $tmpdir
rm -rf core*

# Make gsi namelist
cat << EOF > gsiparm.anl
 &SETUP
   miter=2,niter(1)=100,niter(2)=100,
   write_diag(1)=.true.,write_diag(2)=.false.,write_diag(3)=.true.,
   gencode=78,qoption=1,
   factqmin=1.0,factqmax=1.0,deltim=$DELTIM,
   ndat=44,jpch=556,npred=5,iguess=-1,
   oneobtest=.false.,retrieval=.false.,
   nhr_assimilation=3,
 /
 &GRIDOPTS
   JCAP=$JCAP,NLAT=$NLAT,NLON=$LONA,nsig=$LEVS,hybrid=.true.,
   wrf_nmm_regional=.false.,wrf_mass_regional=.true.,diagnostic_reg=.false.,
   filled_grid=.false.,half_grid=.true.,netcdf=.false.,
 /
 &BKGERR
   as=0.15,0.15,0.15,0.3,0.5,0.5,1.0,1.0,
   hzscl=1.50,0.746,0.373,
   vs=0.5,bw=0.0,
 /
 &ANBKGERR
   anisotropic=.false.,
 /
 &JCOPTS
   jcterm=.false.,damptend=0.0,
   bamp_pse=0.0,bamp_uve=0.0,bamp_uvi=0.0,bamp_tin=0.0,
 /
 &OBSQC
   dfact=0.1,oberrflg=.true.,
 /
 &OBS_INPUT
   dmesh(1)=15.0,dmesh(2)=25.0,dmesh(3)=20.0,dmesh(4)=16.0,
   dfile(01)='prepbufr',  dtype(01)='ps',        dplat(01)=' ',         dsis(01)='ps',                  dval(01)=1.0,  dthin(01)=0,
   dfile(02)='prepbufr'   dtype(02)='t',         dplat(02)=' ',         dsis(02)='t',                   dval(02)=1.0,  dthin(02)=0,
   dfile(03)='prepbufr',  dtype(03)='q',         dplat(03)=' ',         dsis(03)='q',                   dval(03)=1.0,  dthin(03)=0,
   dfile(04)='prepbufr',  dtype(04)='pw',        dplat(04)=' ',         dsis(04)='pw',                  dval(04)=1.0,  dthin(04)=0,
   dfile(05)='prepbufr',  dtype(05)='uv',        dplat(05)=' ',         dsis(05)='uv',                  dval(05)=1.0,  dthin(05)=0,
   dfile(06)='prepbufr',  dtype(06)='spd',       dplat(06)=' ',         dsis(06)='spd',                 dval(06)=1.0,  dthin(06)=0,
   dfile(07)='prepbufr',  dtype(07)='dw',        dplat(07)=' ',         dsis(07)='dw',                  dval(07)=1.0,  dthin(07)=0,
   dfile(08)='radarbufr', dtype(08)='rw',        dplat(08)=' ',         dsis(08)='rw',                  dval(08)=1.0,  dthin(08)=0,
   dfile(09)='prepbufr',  dtype(09)='sst',       dplat(09)=' ',         dsis(09)='sst',                 dval(09)=1.0,  dthin(09)=0,
   dfile(10)='gpsbufr',   dtype(10)='gps_ref',   dplat(10)=' ',         dsis(10)='gps_ref',             dval(10)=1.0,  dthin(10)=0,
   dfile(11)='ssmibufr',  dtype(11)='pcp_ssm/i', dplat(11)='dmsp',      dsis(11)='pcp_ssmi',            dval(11)=1.0,  dthin(11)=-1,
   dfile(12)='tmibufr',   dtype(12)='pcp_tmi',   dplat(12)='trmm',      dsis(12)='pcp_tmi',             dval(12)=1.0,  dthin(12)=-1,
   dfile(13)='sbuvbufr',  dtype(13)='sbuv2',     dplat(13)='n16',       dsis(13)='sbuv2_n16',           dval(13)=1.0,  dthin(13)=0,
   dfile(14)='sbuvbufr',  dtype(14)='sbuv2',     dplat(14)='n17',       dsis(14)='sbuv2_n17',           dval(14)=1.0,  dthin(14)=0,
   dfile(15)='omi',       dtype(15)='omi',       dplat(15)='aura',      dsis(15)='omi_aura',            dval(15)=1.0,  dthin(15)=0,
   dfile(16)='hirs2bufr', dtype(16)='hirs2',     dplat(16)='n14',       dsis(16)='hirs2_n14',           dval(16)=6.0,  dthin(16)=1,
   dfile(17)='hirs3bufr', dtype(17)='hirs3',     dplat(17)='n16',       dsis(17)='hirs3_n16',           dval(17)=0.0,  dthin(17)=1,
   dfile(18)='hirs3bufr', dtype(18)='hirs3',     dplat(18)='n17',       dsis(18)='hirs3_n17',           dval(18)=6.0,  dthin(18)=1,
   dfile(19)='hirs4bufr', dtype(19)='hirs4',     dplat(19)='n18',       dsis(19)='hirs4_n18',           dval(19)=1.0,  dthin(19)=1,
   dfile(20)='prepbufr',  dtype(20)='sndr',      dplat(20)='g10_prep',  dsis(20)='sndr_g10',            dval(20)=6.0,  dthin(20)=1,
   dfile(21)='prepbufr',  dtype(21)='sndr',      dplat(21)='g12_prep',  dsis(21)='sndr_g12',            dval(21)=6.0,  dthin(21)=1,
   dfile(22)='goesimgbfr',dtype(22)='goesimg',   dplat(22)='g10',       dsis(22)='goesimg_g10',         dval(22)=0.0,  dthin(22)=1,
   dfile(23)='goesimgbfr',dtype(23)='goesimg',   dplat(23)='g12',       dsis(23)='goesimg_g12',         dval(23)=0.0,  dthin(23)=1,
   dfile(24)='airsbufr',  dtype(24)='airs',      dplat(24)='aqua',      dsis(24)='airs281SUBSET_aqua',  dval(24)=20.0, dthin(24)=1,
   dfile(25)='msubufr',   dtype(25)='msu',       dplat(25)='n14',       dsis(25)='msu_n14',             dval(25)=2.0,  dthin(25)=2,
   dfile(26)='amsuabufr', dtype(26)='amsua',     dplat(26)='n15',       dsis(26)='amsua_n15',           dval(26)=10.0, dthin(26)=2,
   dfile(27)='amsuabufr', dtype(27)='amsua',     dplat(27)='n16',       dsis(27)='amsua_n16',           dval(27)=10.0, dthin(27)=2,
   dfile(28)='amsuabufr', dtype(28)='amsua',     dplat(28)='n17',       dsis(28)='amsua_n17',           dval(28)=10.0, dthin(28)=2,
   dfile(29)='amsuabufr', dtype(29)='amsua',     dplat(29)='n18',       dsis(29)='amsua_n18',           dval(29)=10.0, dthin(29)=2,
   dfile(30)='airsbufr',  dtype(30)='amsua',     dplat(30)='aqua',      dsis(30)='amsua_aqua',          dval(30)=10.0, dthin(30)=2,
   dfile(31)='amsubbufr', dtype(31)='amsub',     dplat(31)='n15',       dsis(31)='amsub_n15',           dval(31)=3.0,  dthin(31)=3,
   dfile(32)='amsubbufr', dtype(32)='amsub',     dplat(32)='n16',       dsis(32)='amsub_n16',           dval(32)=3.0,  dthin(32)=3,
   dfile(33)='amsubbufr', dtype(33)='amsub',     dplat(33)='n17',       dsis(33)='amsub_n17',           dval(33)=3.0,  dthin(33)=3,
   dfile(34)='mhsbufr',   dtype(34)='mhs',       dplat(34)='n18',       dsis(34)='mhs_n18',             dval(34)=3.0,  dthin(34)=3,
   dfile(35)='ssmitbufr', dtype(35)='ssmi',      dplat(35)='f13',       dsis(35)='ssmi_f13',            dval(35)=1.0,  dthin(35)=4,
   dfile(36)='ssmitbufr', dtype(36)='ssmi',      dplat(36)='f14',       dsis(36)='ssmi_f14',            dval(36)=1.0,  dthin(36)=4,
   dfile(37)='ssmitbufr', dtype(37)='ssmi',      dplat(37)='f15',       dsis(37)='ssmi_f15',            dval(37)=1.0,  dthin(37)=4,
   dfile(38)='amsrebufr', dtype(38)='amsre_low', dplat(38)='aqua',      dsis(38)='amsre_aqua',          dval(38)=1.0,  dthin(38)=4,
   dfile(39)='amsrebufr', dtype(39)='amsre_mid', dplat(39)='aqua',      dsis(39)='amsre_aqua',          dval(39)=1.0,  dthin(39)=4,
   dfile(40)='amsrebufr', dtype(40)='amsre_hig', dplat(40)='aqua',      dsis(40)='amsre_aqua',          dval(40)=1.0,  dthin(40)=4,
   dfile(41)='ssmisbufr', dtype(41)='ssmis_las', dplat(41)='f16',       dsis(41)='ssmis_f16',           dval(41)=1.0,  dthin(41)=4,
   dfile(42)='ssmisbufr', dtype(42)='ssmis_uas', dplat(42)='f16',       dsis(42)='ssmis_f16',           dval(42)=1.0,  dthin(42)=4,
   dfile(43)='ssmisbufr', dtype(43)='ssmis_img', dplat(43)='f16',       dsis(43)='ssmis_f16',           dval(43)=1.0,  dthin(43)=4,
   dfile(44)='ssmisbufr', dtype(44)='ssmis_env', dplat(44)='f16',       dsis(44)='ssmis_f16',           dval(44)=1.0,  dthin(44)=4,
 /
 &SUPEROB_RADAR
 /
 &SINGLEOB_TEST
   maginnov=0.1,magoberr=0.1,oneob_type='t',
   oblat=45.,oblon=270.,obpres=850.,obdattim=${adate},
   obhourset=0.,
 /
EOF

# Set fixed files
#   berror   = forecast model background error statistics
#   specoef  = OPTRAN spectral coefficients
#   trncoef  = OPTRAN transmittance coefficients
#   emiscoef = coefficients for IR sea surface emissivity model
#   satinfo  = text file with information about assimilation of brightness temperatures
#   satangl  = angle dependent bias correction file (fixed in time)
#   pcpinfo  = text file with information about assimilation of prepcipitation rates
#   ozinfo   = text file with information about assimilation of ozone data
#   errtable = text file with obs error for conventional data (regional only)
#   bufrtable= text file ONLY needed for single obs test (oneobstest=.true.)

berror=$fixgsi/regional_glb_berror.f77
specoef=$fixgsi/CRTM_SpcCoeff.f77
trncoef=$fixgsi/CRTM_TauCoeff.f77
emiscoef=$fixgsi/CRTM_EmisCoeff.f77
aercoef=$fixgsi/CRTM_AerosolCoeff.f77
cldcoef=$fixgsi/CRTM_CldCoeff.f77
satinfo=$fixgsi/regional_satinfo.txt
satangl=$fixgsi/global_satangbias.txt
pcpinfo=$fixgsi/global_pcpinfo.txt
ozinfo=$fixgsi/global_ozinfo.txt
errtable=$fixgsi/nam_errtable.r3dv
convinfo=$fixgsi/regional_convinfo.txt

# NOTE:  If running gsi version gsi_cvs.200409 or earlier,
#        use the below fix file variable definitions
##specoef=$fixdir/global_spectral_coefs.f77
##trncoef=$fixdir/global_transmittance_coefs.f77
##emiscoef=$fixdir/global_emissivity_coefs.f77


# Only need this file for single obs test
bufrtable=$fixgsi/prepobs_prep.bufrtable

# Copy executable and fixed files to $tmpdir
$ncp $gsiexec ./gsi.x

$ncp $berror   ./berror_stats
$ncp $specoef  ./SpcCoeff.bin
$ncp $trncoef  ./TauCoeff.bin
$ncp $emiscoef ./EmisCoeff.bin
$ncp $aercoef  ./AerosolCoeff.bin
$ncp $cldcoef  ./CloudCoeff.bin
##$ncp $satangl  ./satbias_angle
$ncp $satinfo  ./satinfo
$ncp $pcpinfo  ./pcpinfo
$ncp $ozinfo   ./ozinfo
$ncp $convinfo ./convinfo
$ncp $errtable ./errtable

$ncp $bufrtable ./prepobs_prep.bufrtable


# Copy observational data to $tmpdir

##$ncp $datobs/20060670000.ruc2a.t00z.prepbufr.tm00.20060308 prepgc_prep
$ncp /misc/p70/wrfruc/users/chem/GSI/GSI_param/ssrc ssrc
$ncp $datobs/gblav.t06z.prepbufr.nr        ./prepgc_prep
$ncp $datobs/gblav.t06z.1bamua.${suffix}   ./amsuabufrBE
$ncp $datobs/gblav.t06z.1bamub.${suffix}   ./amsubbufrBE
$ncp $datobs/gblav.t06z.1bhrs2.${suffix}   ./hirs2bufrBE
$ncp $datobs/gblav.t06z.1bhrs3.${suffix}   ./hirs3bufrBE
$ncp $datobs/gblav.t06z.1bmsu.${suffix}    ./msubufrBE

#ssrc prepgc_prep > prepqc
ssrc prepgc_prep > prepbufr
ssrc amsuabufrBE > amsuabufr
ssrc amsubbufrBE > amsubbufr
ssrc hirs2bufrBE > hirs2bufr
ssrc hirs3bufrBE > hirs3bufr
ssrc msubufrBE   > msubufr

# Copy bias correction, sigma, and surface files
#
#  *** NOTE:  The regional gsi analysis is written to (over)
#             the input guess field file (wrf_inout)
#
##$ncp $datges/abias                       ./satbias_in
##$ncp $datges/satang                      ./satbias_angle
##$ncp $datges/wrfinput_west_mass_d01_bi wrf_inout
$ncp ../../data/wrf_inout_little_endian wrf_inout

# Run gsi on ijet
echo 1

##mpirun -np 76 $tmpdir/gsi.x < gsiparm.anl > stdout
mpirun -np 76 /usr/local/sbin/gdb_tombstone_wrapper gsi.x < gsiparm.anl > stdout
#mpirun -np 76 gsi.x < gsiparm.anl > stdout

echo 2

# Save output
mkdir -p $savdir

cat stdout fort.2* > $savdir/stdout.anl.${adate}
$ncp wrf_inout       $savdir/wrfanl.${adate}

# If desired, copy guess file to unique filename in $savdir
$ncp $datges/wrfinput_d01_mass_cent $savdir/wrfges.${adate}


# Loop over first and last outer loops to generate innovation
# diagnostic files for indicated observation types (groups)
#
# NOTE:  Since we set miter=2 in GSI namelist SETUP, outer
#        loop 03 will contain innovations with respect to 
#        the analysis.  Creation of o-a innovation files
#        is triggered by write_diag(3)=.true.  The setting
#        write_diag(1)=.true. turns on creation of o-g
#        innovation files.
#

loops="01 03"
for loop in $loops; do

# Collect diagnostic files for obs types (groups) below
   list="hirs2.014 msu.014 goes.008 goes.010 goes.012 hirs3.015 hirs3.016 hirs3.017 amsua.015 amsua.016 amsua.017 amsub.015 amsub.016 amsub.017 hsb.049 airs.049 eos_amsua.049 goesimg.008 goesimg.010 goesimg.012 pcp_ssmi.264 pcp_tmi.211 conv sbuv2.016 sbuv2.017"
for type in $list; do
      count=`ls ${tmpdir}/${type}_${loop}* | wc -l`
      if [[ count -gt 0 ]]; then
         cat ${tmpdir}/${type}_${loop}.* > ${tmpdir}/diag_${type}_${loop}
         compress ${tmpdir}/diag_${type}_${loop}
         if [[ "$loop" = "01" ]]; then
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_ges.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_ges.${adate}.Z $savdir/diag_${type}_ges.${adate}.Z
         elif [[ "$loop" = "03" ]]; then
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_anl.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_anl.${adate}.Z $savdir/diag_${type}_anl.${adate}.Z
         else
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_${loop}.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_${loop}.${adate}.Z $savdir/diag_${type}_${loop}.${adate}.Z
         fi
      fi
   done
done



# If requested, clean up $tmpdir
if [[ "$CLEAN" = "YES" ]];then
   cd $tmpdir
   cd ../
   if [[ $rc -eq 0 ]];then
      rm -rf $tmpdir/*
      rm -rf $tmpdir
   fi
fi


# End of script
exit
