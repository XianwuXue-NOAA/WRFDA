#!/bin/sh

# NOTE:  To ensure reproducible results, must use same number of
#        MPI tasks AND nodes for each run.  blocking=unlimited
#        leads to roundoff differences in mpi_allreduce.

## Below are LoadLeveler (IBM queueing system) commands
#@ job_name=gsi_global
#@ error=gsi_global.e$(jobid)
#@ job_type=parallel
#@ network.MPI=csss,shared,us
#@ total_tasks=48
#@ blocking=unlimited
#@ class= dev
#@ group=devonprod
#@ wall_clock_limit = 2:00:00
#@ startdate = 10/27/05 20:00
#@ notification=error
#@ queue

set -x

# Set MPI environment variables for NCEP IBM
export MP_SHARED_MEMORY=yes
export XLFRTEOPTS="nlwidth=80"
export MP_LABELIO=yes


# Set environment variables for threads
export SPINLOOPTIME=10000
export YIELDLOOPTIME=40000
export AIXTHREAD_SCOPE=S
export MALLOCMULTIHEAP=true
export XLSMPOPTS="parthds=1:spins=0:yields=0:stack=128000000"


# Variables for debugging (don't always need)
##export XLFRTEOPTS="buffering=disable_all"
##export MP_COREFILE_FORMAT=lite


# Set experiment name and analysis date
exp=gsi_cvs.200603
adate=2005102312


# Set path/file for gsi executable
gsiexec=/nfsuser/g01.1/weather/wx20rt/gsi_anl/sorc/$exp/gsi_anl



# Set the JCAP resolution which you want.
# All resolutions use LEVS=64
export JCAP=382
export LEVS=64


# Specify the type of vertical coordinate by setting hybrid logical
# If desired coordinate is sigma, set hybrid=.false.
# If desired coordinate is hybrid, set hybrid=.true.
hybrid=".false."

vcord=sigma
if [[ "$hybrid" = ".true." ]]; then
   vcord=hybrid
fi


# Set runtime and save directories
tmpdir=/ptmp/wx20rt/tmp${JCAP}_${vcord}/$exp
savdir=/ptmp/wx20rt/out${JCAP}/${vcord}/${exp}

# Specify GSI fixed field and data directories.
fixgsi=/nfsuser/g01.1/weather/wx20rt/gsi_anl/fix/$exp


datobs=/nfsuser/g01.1/weather/wx20rt/gsi_anl/cases/global/${vcord}/t${JCAP}l${LEVS}/$adate
datges=$datobs



# Set variables used in script
#   CLEAN up $tmpdir when finished (YES=remove, NO=leave alone)
#   ncp is a fast copy using rcp between NCEP IBM nodes
#     (ncp does not yet work on blue, redefine ncp=/bin/cp)
#   ndate is a date manipulation utility

CLEAN=YES
##ncp=/u/wx20mi/bin/ncp
ncp=/bin/cp
ndate=/nwprod/util/exec/ndate


# Given the requested resolution, set dependent resolution parameters
if [[ "$JCAP" = "382" ]]; then
   export LONA=768
   export LATA=384
fi
if [[ "$JCAP" = "254" ]]; then
   export LONA=512
   export LATA=256
fi
if [[ "$JCAP" = "62" ]]; then
   export LONA=192
   export LATA=94
fi
export NLAT=$((${LATA}+2))
export DELTIM=${DELTIM:-$((3600/($JCAP/20)))}


# Given the analysis date, compute the date from which the
# first guess comes.  Extract cycle and set prefix and suffix
# for guess and observation data files
gdate=`$ndate -06 $adate`
cca=`echo $adate | cut -c9-10`
ccg=`echo $gdate | cut -c9-10`
prefixa=gdas1.t${cca}z
prefixg=gdas1.t${ccg}z
suffix=tm00.bufr_d



# Set up $tmpdir
rm -rf $tmpdir
mkdir -p $tmpdir
cd $tmpdir
rm -rf core*


# Make gsi namelist
cat << EOF > gsiparm.anl
 &SETUP
   miter=2,niter(1)=100,niter(2)=100,
   niter_no_qc(1)=60,niter_no_qc(2)=0,
   write_diag(1)=.true.,write_diag(2)=.false.,write_diag(3)=.true.,
   gencode=82,qoption=1,
   factqmin=0.07,factqmax=0.07,deltim=$DELTIM,
   ndat=44,jpch=592,npred=5,iguess=-1,
   oneobtest=.false.,retrieval=.false.,
 /
 &GRIDOPTS
   JCAP=$JCAP,NLAT=$NLAT,NLON=$LONA,nsig=$LEVS,hybrid=${hybrid},
   regional=.false.,nlayers(63)=3,nlayers(64)=6,
 /
 &BKGERR
   as=0.6,0.6,0.6,0.6,0.8,0.6,1.0,1.0,
   vs=0.7,
   hzscl=1.6666667,0.8333333,0.5,
   hswgt=0.45,0.3,0.25
   bw=0.0,norsp=4,
 /
 &ANBKGERR
   anisotropic=.false.,
 /
 &JCOPTS
   jcterm=.true.,damptend=1.0,bamp_pse=1.0e6,bamp_uve=1.0e6,
   bamp_uvi=1.0e4, bamp_tin=1.0e5
 /
 &OBSQC
   dfact=0.1,oberrflg=.true.,
 /
 &OBS_INPUT
   dmesh(1)=180.0,dmesh(2)=145.0,dmesh(3)=240.0,dmesh(4)=160.0,
   dfile(01)='prepbufr',  dtype(01)='ps',        dplat(01)=' ',         dsis(01)='ps',                  dval(01)=1.0,  dthin(01)=0,
   dfile(02)='prepbufr'   dtype(02)='t',         dplat(02)=' ',         dsis(02)='t',                   dval(02)=1.0,  dthin(02)=0,
   dfile(03)='prepbufr',  dtype(03)='q',         dplat(03)=' ',         dsis(03)='q',                   dval(03)=1.0,  dthin(03)=0,
   dfile(04)='prepbufr',  dtype(04)='pw',        dplat(04)=' ',         dsis(04)='pw',                  dval(04)=1.0,  dthin(04)=0,
   dfile(05)='prepbufr',  dtype(05)='uv',        dplat(05)=' ',         dsis(05)='uv',                  dval(05)=1.0,  dthin(05)=0,
   dfile(06)='prepbufr',  dtype(06)='spd',       dplat(06)=' ',         dsis(06)='spd',                 dval(06)=1.0,  dthin(06)=0,
   dfile(07)='prepbufr',  dtype(07)='dw',        dplat(07)=' ',         dsis(07)='dw',                  dval(07)=1.0,  dthin(07)=0,
   dfile(08)='radarbufr', dtype(08)='rw',        dplat(08)=' ',         dsis(08)='rw',                  dval(08)=1.0,  dthin(08)=0,
   dfile(09)='prepbufr',  dtype(09)='sst',       dplat(09)=' ',         dsis(09)='sst',                 dval(09)=1.0,  dthin(09)=0,
   dfile(10)='gpsbufr',   dtype(10)='gps_ref',   dplat(10)=' ',         dsis(10)='gps_ref',             dval(10)=1.0,  dthin(10)=0,
   dfile(11)='ssmibufr',  dtype(11)='pcp_ssm/i', dplat(11)='dmsp',      dsis(11)='pcp_ssmi',            dval(11)=1.0,  dthin(11)=-1,
   dfile(12)='tmibufr',   dtype(12)='pcp_tmi',   dplat(12)='trmm',      dsis(12)='pcp_tmi',             dval(12)=1.0,  dthin(12)=-1,
   dfile(13)='sbuvbufr',  dtype(13)='sbuv2',     dplat(13)='n16',       dsis(13)='sbuv2_n16',           dval(13)=1.0,  dthin(13)=0,
   dfile(14)='sbuvbufr',  dtype(14)='sbuv2',     dplat(14)='n17',       dsis(14)='sbuv2_n17',           dval(14)=1.0,  dthin(14)=0,
   dfile(15)='omi',       dtype(15)='omi',       dplat(15)='aura',      dsis(15)='omi_aura',            dval(15)=1.0,  dthin(15)=0,
   dfile(16)='hirs2bufr', dtype(16)='hirs2',     dplat(16)='n14',       dsis(16)='hirs2_n14',           dval(16)=6.0,  dthin(16)=1,
   dfile(17)='hirs3bufr', dtype(17)='hirs3',     dplat(17)='n16',       dsis(17)='hirs3_n16',           dval(17)=0.0,  dthin(17)=1,
   dfile(18)='hirs3bufr', dtype(18)='hirs3',     dplat(18)='n17',       dsis(18)='hirs3_n17',           dval(18)=6.0,  dthin(18)=1,
   dfile(19)='hirs4bufr', dtype(19)='hirs4',     dplat(19)='n18',       dsis(19)='hirs4_n18',           dval(19)=1.0,  dthin(19)=1,
   dfile(20)='prepbufr',  dtype(20)='sndr',      dplat(20)='g10_prep',  dsis(20)='sndr_g10',            dval(20)=6.0,  dthin(20)=1,
   dfile(21)='prepbufr',  dtype(21)='sndr',      dplat(21)='g12_prep',  dsis(21)='sndr_g12',            dval(21)=6.0,  dthin(21)=1,
   dfile(22)='goesimgbfr',dtype(22)='goesimg',   dplat(22)='g10',       dsis(22)='goesimg_g10',         dval(22)=0.0,  dthin(22)=1,
   dfile(23)='goesimgbfr',dtype(23)='goesimg',   dplat(23)='g12',       dsis(23)='goesimg_g12',         dval(23)=0.0,  dthin(23)=1,
   dfile(24)='airsbufr',  dtype(24)='airs',      dplat(24)='aqua',      dsis(24)='airs281SUBSET_aqua',  dval(24)=20.0, dthin(24)=1,
   dfile(25)='msubufr',   dtype(25)='msu',       dplat(25)='n14',       dsis(25)='msu_n14',             dval(25)=2.0,  dthin(25)=2,
   dfile(26)='amsuabufr', dtype(26)='amsua',     dplat(26)='n15',       dsis(26)='amsua_n15',           dval(26)=10.0, dthin(26)=2,
   dfile(27)='amsuabufr', dtype(27)='amsua',     dplat(27)='n16',       dsis(27)='amsua_n16',           dval(27)=10.0, dthin(27)=2,
   dfile(28)='amsuabufr', dtype(28)='amsua',     dplat(28)='n17',       dsis(28)='amsua_n17',           dval(28)=10.0, dthin(28)=2,
   dfile(29)='amsuabufr', dtype(29)='amsua',     dplat(29)='n18',       dsis(29)='amsua_n18',           dval(29)=10.0, dthin(29)=2,
   dfile(30)='airsbufr',  dtype(30)='amsua',     dplat(30)='aqua',      dsis(30)='amsua_aqua',          dval(30)=10.0, dthin(30)=2,
   dfile(31)='amsubbufr', dtype(31)='amsub',     dplat(31)='n15',       dsis(31)='amsub_n15',           dval(31)=3.0,  dthin(31)=3,
   dfile(32)='amsubbufr', dtype(32)='amsub',     dplat(32)='n16',       dsis(32)='amsub_n16',           dval(32)=3.0,  dthin(32)=3,
   dfile(33)='amsubbufr', dtype(33)='amsub',     dplat(33)='n17',       dsis(33)='amsub_n17',           dval(33)=3.0,  dthin(33)=3,
   dfile(34)='mhsbufr',   dtype(34)='mhs',       dplat(34)='n18',       dsis(34)='mhs_n18',             dval(34)=3.0,  dthin(34)=3,
   dfile(35)='ssmitbufr', dtype(35)='ssmi',      dplat(35)='f13',       dsis(35)='ssmi_f13',            dval(35)=1.0,  dthin(35)=4,
   dfile(36)='ssmitbufr', dtype(36)='ssmi',      dplat(36)='f14',       dsis(36)='ssmi_f14',            dval(36)=1.0,  dthin(36)=4,
   dfile(37)='ssmitbufr', dtype(37)='ssmi',      dplat(37)='f15',       dsis(37)='ssmi_f15',            dval(37)=1.0,  dthin(37)=4,
   dfile(38)='amsrebufr', dtype(38)='amsre_low', dplat(38)='aqua',      dsis(38)='amsre_aqua',          dval(38)=1.0,  dthin(38)=4,
   dfile(39)='amsrebufr', dtype(39)='amsre_mid', dplat(39)='aqua',      dsis(39)='amsre_aqua',          dval(39)=1.0,  dthin(39)=4,
   dfile(40)='amsrebufr', dtype(40)='amsre_hig', dplat(40)='aqua',      dsis(40)='amsre_aqua',          dval(40)=1.0,  dthin(40)=4,
   dfile(41)='ssmisbufr', dtype(41)='ssmis_las', dplat(41)='f16',       dsis(41)='ssmis_f16',           dval(41)=1.0,  dthin(41)=4,
   dfile(42)='ssmisbufr', dtype(42)='ssmis_uas', dplat(42)='f16',       dsis(42)='ssmis_f16',           dval(42)=1.0,  dthin(42)=4,
   dfile(43)='ssmisbufr', dtype(43)='ssmis_img', dplat(43)='f16',       dsis(43)='ssmis_f16',           dval(43)=1.0,  dthin(43)=4,
   dfile(44)='ssmisbufr', dtype(44)='ssmis_env', dplat(44)='f16',       dsis(44)='ssmis_f16',           dval(44)=1.0,  dthin(44)=4,
 /
 &SUPEROB_RADAR
 /
 &SINGLEOB_TEST
   maginnov=0.1,magoberr=0.1,oneob_type='t',
   oblat=45.,oblon=180.,obpres=1000.,obdattim=${adate},
   obhourset=0.,
 /
EOF

# Set fixed files
#   berror   = forecast model background error statistics
#   specoef  = CRTM spectral coefficients
#   trncoef  = CRTM transmittance coefficients
#   emiscoef = CRTM coefficients for IR sea surface emissivity model
#   aerocoef = CRTM coefficients for aerosol effects
#   cldcoef  = CRTM coefficients for cloud effects
#   satinfo  = text file with information about assimilation of brightness temperatures
#   satangl  = angle dependent bias correction file (fixed in time)
#   pcpinfo  = text file with information about assimilation of prepcipitation rates
#   ozinfo   = text file with information about assimilation of ozone data
#   errtable = text file with obs error for conventional data (optional)
#   convinfo = text file with information about assimilation of conventional data
#   bufrtable= text file ONLY needed for single obs test (oneobstest=.true.)
#   bftab_sst= bufr table for sst ONLY needed for sst retrieval (retrieval=.true.)

tag=`echo $vcord | cut -c1-3`
berror=$fixgsi/global_berror.l${LEVS}y${NLAT}.${tag}.f77
specoef=$fixgsi/CRTM_SpcCoeff.f77
trncoef=$fixgsi/CRTM_TauCoeff.f77
emiscoef=$fixgsi/CRTM_EmisCoeff.f77
aercoef=$fixgsi/CRTM_AerosolCoeff.f77
cldcoef=$fixgsi/CRTM_CldCoeff.f77
satinfo=$fixgsi/global_satinfo.txt
satangl=$fixgsi/global_satangbias.txt
pcpinfo=$fixgsi/global_pcpinfo.txt
ozinfo=$fixgsi/global_ozinfo.txt
errtable=$fixgsi/prepobs_errtable.global
convinfo=$fixgsi/global_convinfo.txt


# Only need this file for single obs test
bufrtable=$fixgsi/prepobs_prep.bufrtable

# Only need this file for sst retrieval
bftab_sst=/nwprod/fix/bufrtab.012

# Copy executable and fixed files to $tmpdir
$ncp $gsiexec ./gsi.x

$ncp $berror   ./berror_stats
$ncp $specoef  ./SpcCoeff.bin
$ncp $trncoef  ./TauCoeff.bin
$ncp $emiscoef ./EmisCoeff.bin
$ncp $aercoef  ./AerosolCoeff.bin
$ncp $cldcoef  ./CloudCoeff.bin
$ncp $satangl  ./satbias_angle
$ncp $satinfo  ./satinfo
$ncp $pcpinfo  ./pcpinfo
$ncp $ozinfo   ./ozinfo
$ncp $convinfo ./convinfo
$ncp $errtable ./errtable

$ncp $bufrtable ./prepobs_prep.bufrtable
$ncp $bftab_sst ./bftab_sstphr


# Copy observational data to $tmpdir
$ncp $datobs/${prefixa}.prepbufr.nr        ./prepbufr
$ncp $datobs/${prefixa}.osbuv.${suffix}    ./sbuvbufr
$ncp $datobs/${prefixa}.omto3.tm00.txt     ./omi
$ncp $datobs/${prefixa}.spssmi.${suffix}   ./ssmibufr
$ncp $datobs/${prefixa}.sptrmm.${suffix}   ./tmibufr
$ncp $datobs/${prefixa}.1bamua.${suffix}   ./amsuabufr
$ncp $datobs/${prefixa}.1bamub.${suffix}   ./amsubbufr
$ncp $datobs/${prefixa}.1bhrs2.${suffix}   ./hirs2bufr
$ncp $datobs/${prefixa}.1bhrs3.${suffix}   ./hirs3bufr
$ncp $datobs/${prefixa}.1bhrs4.${suffix}   ./hirs4bufr
$ncp $datobs/${prefixa}.1bmhs.${suffix}    ./mhsbufr
$ncp $datobs/${prefixa}.1bmsu.${suffix}    ./msubufr
$ncp $datobs/${prefixa}.airs.${suffix}     ./airsbufr
$ncp $datobs/${prefixa}.ssmit.${suffix}    ./ssmitbufr
$ncp $datobs/${prefixa}.gps.${suffix}      ./gpsbufr
$ncp $datobs/${prefixa}.amsre.${suffix}    ./amsrebufr
$ncp $datobs/${prefixa}.ssmis.${suffix}    ./ssmisbufr


# Copy bias correction, atmospheric and surface files
$ncp $datges/${prefixg}.abias.new          ./satbias_in
$ncp $datges/${prefixg}.satang.new         ./satbias_angle

$ncp $datges/${prefixg}.bf03               ./sfcf03.quad
$ncp $datges/${prefixg}.bf06               ./sfcf06.quad
$ncp $datges/${prefixg}.bf09               ./sfcf09.quad

$ncp $datges/${prefixa}.sgm3prep           ./sigf03
$ncp $datges/${prefixa}.sgesprep           ./sigf06
$ncp $datges/${prefixa}.sgp3prep           ./sigf09


# Interpolate surface files from quadratic to linear grid
list="sfcf03 sfcf06 sfcf09"
for file in $list; do
   export SIGINP=NULL
   export SFCINP=$tmpdir/$file.quad
   export SIGOUT=NULL
   export SFCOUT=$tmpdir/$file
   export LONB=${LONA}
   export LATB=${LATA}
   export FIXGLOBAL=/nwprod/fix
   export DATA=NULL
   export CHGRESEXEC=/nwprod/exec/global_chgres
   export CHGRESSH=/nwprod/ush/global_chgres.sh
   $CHGRESSH
done


# Run gsi under Parallel Operating Environment (poe) on NCEP IBM
poe hpmcount $tmpdir/gsi.x < gsiparm.anl > stdout
rc=$?


# Save output
mkdir -p $savdir

cat stdout fort.2* > $savdir/stdout.anl.${adate}
$ncp siganl          $savdir/siganl.${adate}
$ncp sfcanl.gsi      $savdir/sfcanl.${adate}
$ncp satbias_out     $savdir/biascr.${adate}
$ncp sfcf06          $savdir/sfcf06.${gdate}
$ncp sigf06          $savdir/sigf06.${gdate}

ss2gg=/nfsuser/g01.1/weather/wx20mi/bin/ss2gg
$ss2gg siganl siganl.bin siganl.ctl 4 768 384
$ss2gg sigf06 sigges.bin sigges.ctl 4 768 384

sfc2gg=/nfsuser/g01.1/weather/wx20mi/bin/sfc2gg
$sfc2gg sfcanl.gsi sfcanl.bin sfcanl.ctl
$sfc2gg sfcf06     sfcges.bin sfcges.ctl

$ncp s*anl.bin $savdir/
$ncp s*anl.ctl $savdir/
$ncp s*ges.bin $savdir/
$ncp s*ges.ctl $savdir/

# Loop over first and last outer loops to generate innovation
# diagnostic files for indicated observation types (groups)
#
# NOTE:  Since we set miter=2 in GSI namelist SETUP, outer
#        loop 03 will contain innovations with respect to 
#        the analysis.  Creation of o-a innovation files
#        is triggered by write_diag(3)=.true.  The setting
#        write_diag(1)=.true. turns on creation of o-g
#        innovation files.
#

loops="01 03"
for loop in $loops; do

# Collect diagnostic files for obs types (groups) below
   list="hirs2_n14 msu_n14 sndr_g08_prep sndr_g10_prep sndr_g12_prep sndrd1_g08 sndrd2_g08 sndrd3_g08 sndrd4_g08 sndrd1_g10 sndrd2_g10 sndrd3_g10 sndrd4_g10 sndrd1_g12 sndrd2_g12 sndrd3_g12 sndrd4_g12 hirs3_n15 hirs3_n16 hirs3_n17 amsua_n15 amsua_n16 amsua_n17 amsub_n15 amsub_n16 amsub_n17 hsb_aqua airs_aqua amsua_aqua goesimg_g08 goesimg_g10 goesimg_g12 pcp_ssmi_dmsp pcp_tmi_trmm conv sbuv2_n16 sbuv2_n17 sbuv2_n18 omi_aura ssmi_f13 ssmi_f14 ssmi_f15 hirs4_n18 amsua_n18 mhs_n18 amsre_low_aqua amsre_mid_aqua amsre_hig_aqua ssmis_las_f16 ssmis_uas_f16 ssmis_img_f16 ssmis_env_f16"
for type in $list; do
      count=`ls ${tmpdir}/${type}_${loop}* | wc -l`
      if [[ count -gt 0 ]]; then
         cat ${tmpdir}/${type}_${loop}.* > ${tmpdir}/diag_${type}_${loop}
         compress ${tmpdir}/diag_${type}_${loop}
         if [[ "$loop" = "01" ]]; then
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_ges.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_ges.${adate}.Z $savdir/diag_${type}_ges.${adate}.Z
         elif [[ "$loop" = "03" ]]; then
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_anl.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_anl.${adate}.Z $savdir/diag_${type}_anl.${adate}.Z
         else
            mv ${tmpdir}/diag_${type}_${loop}.Z $tmpdir/diag_${type}_${loop}.${adate}.Z
            ${ncp:-cp} $tmpdir/diag_${type}_${loop}.${adate}.Z $savdir/diag_${type}_${loop}.${adate}.Z
         fi
      fi
   done
done



# If requested, clean up $tmpdir
if [[ "$CLEAN" = "YES" ]];then
   cd $tmpdir
   cd ../
   if [[ $rc -eq 0 ]];then
      rm -rf $tmpdir
   fi
fi


# End of script
exit
