###########################################################
#ARCH Template
#
# Tools (preprocessor, fortran, c, loader)
CPP             = /lib/cpp
M4              = m4
FC              = mpif90
FFC             = pgf90
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

# Flags (preprocessor, fortran, c, loader)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = #-fast
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

# Libraries

LOCAL_LIB       =  -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

# Architecture

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compiler  (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM

FCOPTIM         = #-fast
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compiler  (RSL, MPICH, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
#CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = #-fast
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95 compiler  (Single-threaded)
#
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM

FCOPTIM         = 
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore
FCTYPE          = -r8

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95 compiler  (RSL, MPICH, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM 
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       =  -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95 compiler optimised  (RSL, MPICH)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM 
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = #-g -ftrace=full -finteger=-9999 -freal=nan -C
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       =  -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Intel xeon i686 ia32 Xeon Linux, ifort compiler (single-threaded, no nesting)
#

M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DDEREF_KLUDGE -DIO_DEREF_KLUDGE -DLINUX \
                    -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE

FCOPTIM         = -O3 -xW
FCDEBUG         = # -g
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCTYPE          = -r8

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, PGI compiler  (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM

FCOPTIM         = #-fastsse
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, PGI compiler  (RSL, MPICH, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = #-fastsse
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = 
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale compiler  (Single-threaded)
#
FC              = pathf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM

FCOPTIM         = #-fastsse
FCDEBUG         = -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale compiler  (RSL, MPICH, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = #-fastsse
FCDEBUG         = -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, ifort compiler  (Single-threaded)
#
M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DDEREF_KLUDGE -DIO_DEREF_KLUDGE -DLINUX \
                    -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE

FCOPTIM         = #-O3 -xW
FCDEBUG         = # -g -C
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 

CCFLAGS_RSL     =

LDFLAGS         = $(FCBASE) $(FCOPTIM) $(FCENDIAN)

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, ifort compiler  (RSL, MPICH, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DDEREF_KLUDGE -DIO_DEREF_KLUDGE -DLINUX \
                    -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = #-O3 -xW
FCDEBUG         = # -g -C
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )


###########################################################

#ARCH       SGI 64 bit machine IRIX64     (single-threaded)
#

M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = $(CC)
RANLIB          = echo
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DNORESHAPE -DIRIX -DNONSTANDARD_SYSTEM                    

FCOPTIM         = -O2
FCDEBUG         = # -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        =
FCBASE          = -64 -mips4
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -w -64 -mips4 -DUNDERSCORE -DIRIX
CCFLAGS_RSL     = 

LOCAL_LIB       = 

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH   SGI O2K DM IRIX64            (RSL, RSL_IO, SGI-MPI)
#
LIBINCLUDE	= /tea2/huangwei/mpich-1.2.4/include
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = $(FC)
CC              = mpicc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DIRIX -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL
FCOPTIM         = -O3 -OPT:roundoff=3:IEEE_arithmetic=3
FCDEBUG         = # -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        =
FCBASE          = -64 -mips4 -w
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -w -64 -mips4 -DIRIX -I$(RSL)/RSL -I/tea2/huangwei/mpich-1.2.4/include
CCFLAGS_RSL     =

LOCAL_LIB       = 
MPI_LIB		= -L$(RSL)/RSL -lrsl -lmpi

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST o2k )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH   NEC                      (single-threaded)
#
CPP             = /usr/lib0/cpp
M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

MAX_PROC        = 256

TRADFLAG        =
FPPFLAGS2       = -DMPI -I$(MPIINCDIR) -DNEC -DNONSTANDARD_SYSTEM
                    
FCOPTIM         =
FCDEBUG         =
FCTYPE          =
FCFREE          = -f4
FCENDIAN        =
FCBASE          = -C hopt \
		  -Wf"-init stack=zero heap=zero -pvctl loopcnt=100000000 noassume -O nooverlap" \
                  -pi -ew -eb -float0 -Wf"-L fmtlist"

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH   AIX             (single-threaded, no nesting)
#
M4              = m4 -B24000
FC              = xlf90_r
FFC             = xlf_r
SFC             = $(FC)
CC              = cc_r
CC_TOOLS        = xlc
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNONSTANDARD_SYSTEM                    

FCOPTIM         = -O0 -qarch=auto
FCDEBUG         = #-g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008

FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767 \
                    -qflttrap=zerodivide:invalid:enable -qsigtrap=xl__trce

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99

LDFLAGS2        = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB	= -lmass -lmassv

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH	AIX DM-Parallel          (RSL, IBM-MPI, supports nesting)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = xlc
SCC             = cc_r
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O0 -qarch=auto
FCDEBUG         = #-g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767 \
 		    -qflttrap=zerodivide:invalid:enable -qsigtrap=xl__trce
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99 -I$(RSL)/RSL
CCFLAGS_RSL     =

LDFLAGS2         = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB	= -lmass -lmassv
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(CCFLAGS_RSL)" FC="mpxlf $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH	AIX DM-Parallel Optimised (RSL, IBM-MPI)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = xlc
SCC             = cc_r
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -qarch=auto
FCDEBUG         = #-g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=-1
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99 -I$(RSL)/RSL
CCFLAGS_RSL     =

LDFLAGS2         = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB	= -lmass -lmassv
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(CCFLAGS_RSL)" FC="mpxlf $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH   crayx1 UNICOS/mp  CRAY X1 serial 

SED_FTN		= sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
SCC             = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM
                    
#FCOPTIM         = -Ofp3 -O3 -Ovector0 -Ostream0 -Oscalar1
FCOPTIM         = -O0
FCDEBUG         = # -g
#FCTYPE         = -sinteger32 -e m -sreal64 -dp
FCTYPE          = -e m -sreal64 -dp
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS) -p$(LAPACK) -p$(FFTPACK5)

CCFLAGS2        = -UCRAY -Dcrayx1

LOCAL_LIB       = 

arch : 
	$(LN) $(RSL_STUBS)/* .
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH   crayx1 UNICOS/mp  CRAY X1 parallel

SED_FTN		= sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
SCC             = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

#FCOPTIM        = -Ofp3 -O3
# needed for OpenMP
#FCOPTIM         = -Ofp2 -O1 -Ogen_private_callee
#FCOPTIM         = -Ofp2 -O0 -Ovector0 -Ostream0 -Oscalar1
FCOPTIM         = -O0
FCDEBUG         = #-g
#FCTYPE         = -sinteger32 -e m -sreal64 -dp
FCTYPE          = -e m -sreal64 -dp
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS) -p$(LAPACK) -p$(FFTPACK5)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -UCRAY -Dcrayx1 -I$(RSL)/RSL -h gen_private_callee
CCFLAGS_RSL     = -Dcrayx1 -DMPI2_SUPPORT

LOCAL_LIB       = 
MPI_LIB		= -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
	     MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Darwin		(g95 single-threaded, no nesting, for G4/5)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = cc
LD              = $(FC)

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE                   

FCOPTIM         = 
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -ffree-form -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore \
                    -ftrace=full -finteger=-9999 -freal=nan
FCFLAGS_RSL     = $(FCENDIAN) -fno-second-underscore

CCFLAGS2        = -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     =

EXTRA_LIBS      = -lSystemStubs

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Darwin		(g95 parallel for G4/5 (RSL, MPICH, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
LD              = $(FC)
CC              = mpicc
CC_TOOLS        = cc

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCTYPE          = -r8
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

MPI_LIB		= -L$(RSL)/RSL -lrsl
EXTRA_LIBS      = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Darwin	(g95 optimised parallel for G4/5 (RSL, MPICH, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
LD              = $(FC)
CC              = mpicc
CC_TOOLS        = cc

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = #-g -ftrace=full -finteger=-9999 -freal=nan -C
FCTYPE          = -r8
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,139,155,158 -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

MPI_LIB		= -L$(RSL)/RSL -lrsl
EXTRA_LIBS      = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH  NULL

