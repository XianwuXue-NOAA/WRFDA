#=============================
# Start of preamble
#=============================

# System properties

SHELL           =       /bin/sh

#Macros, these should be generic for all machines

LN      = ln -sf
MAKE    = make -i -r
RM      = /bin/rm -f
MV      = /bin/mv -f
CP      = /bin/cp -f
AR      = ar ru
M4      = m4 -B12000
RANLIB	= ranlib
CPP     = /lib/cpp

.SUFFIXES: .f90 .F90 .F .i .o .f .c

SOLVER=em

# Substituted by Config_wrfvar.pl

DEVTOP      = CONFIGURE_DEVTOP
PERL        = CONFIGURE_PERL_PATH
NETCDFPATH  = CONFIGURE_NETCDF_PATH
PHDF5PATH   = CONFIGURE_PHDF5_PATH
RTTOVPATH   = CONFIGURE_RTTOV_PATH
RTTOV_LIB   = CONFIGURE_RTTOV_LIB
ENVCOMPDEFS = CONFIGURE_COMPILEFLAGS
DA_CORE     = CONFIGURE_DA_CORE
EM_CORE     = CONFIGURE_EM_CORE
FPPFLAGS1   = CONFIGURE_NETCDF_FLAG CONFIGURE_RTTOV_FLAG \
                $(WORDSIZE_DEF) -DLIMIT_ARGS -DWRFPLUS_TESTING -DPROMOTE_FLOAT
WRFIO       = CONFIGURE_WRFIO_NF wrfio_int wrfio_grib1
REGISTRY    = CONFIGURE_REGISTRY
# switch to use separately installed ESMF library for coupling:  1==true
ESMF_COUPLING       = CONFIGURE_ESMF_COUPLING
ESMF_MOD_DEPENDENCE = CONFIGURE_ESMF_MOD_DEPENDENCE
ESMF_MOD_INC        = CONFIGURE_ESMF_MOD_INC
ESMF_IO_INC         = CONFIGURE_ESMF_IO_INC
ESMF_IO_DEFS        = CONFIGURE_ESMF_IO_DEFS
ESMF_TARGET         = CONFIGURE_ESMF_TARGET

# Short cuts to directories

ARCH      = $(DEVTOP)/arch
CHEM      = $(DEVTOP)/chem
CONVERTOR = $(DEVTOP)/convertor
DA        = $(DEVTOP)/da
DYNAMICS  = $(DEVTOP)/dyn_$(SOLVER)
DYN_EM    = $(DEVTOP)/dyn_em
DYN_NMM   = $(DEVTOP)/dyn_nmm
DYN_EXP   = $(DEVTOP)/dyn_exp
EXTERNAL  = $(DEVTOP)/external
FRAME     = $(DEVTOP)/frame
GEN_BE    = $(DEVTOP)/gen_be
INC       = $(DEVTOP)/inc
MAIN      = $(DEVTOP)/main
PHYS      = $(DEVTOP)/phys
RUN       = $(DEVTOP)/run
SCRIPTS   = $(DEVTOP)/scripts
SHARE     = $(DEVTOP)/share
TEST      = $(DEVTOP)/test
TOOLS     = $(DEVTOP)/tools

LAPACK        = $(EXTERNAL)/lapack
FFTPACK5      = $(EXTERNAL)/fftpack5
BLAS          = $(EXTERNAL)/blas
BUFR_NCEP_NCO = $(EXTERNAL)/bufr_ncep_nco
IO_GRIB1      = $(EXTERNAL)/io_grib1
IO_INT        = $(EXTERNAL)/io_int
ESMF_TIME_F90 = $(EXTERNAL)/esmf_time_f90
IO_NETCDF     = $(EXTERNAL)/io_netcdf
IOAPI_SHARE   = $(EXTERNAL)/ioapi_share
RSL           = $(EXTERNAL)/RSL_stubs

NETCDF_LIB    = -L$(EXTERNAL)/io_netcdf -lwrfio_nf -L$(NETCDFPATH)/lib -lnetcdf
PHDF5_LIB     = -L$(EXTERNAL)/io_phdf5 -lwrfio_phdf5 -L$(PHDF5PATH)/lib -lhdf5_fortran -lhdf5 -lm -lz -L$(PHDF5PATH)/lib -lsz
LAPACK_LIB    = -L$(LAPACK) -llapack
BLAS_LIB      = -L$(BLAS) -lblas
BUFR_LIB      = -L$(BUFR_NCEP_NCO) -lbufr
FFTPACK5_LIB  = -L$(FFTPACK5) -lfftpack5
IO_INT_LIB    = -L$(IO_INT) -lwrfio_int
IO_GRIB_LIB   = -L$(IO_GRIB1) -lio_grib1
ESMF_TIME_LIB = -L$(ESMF_TIME_F90) -lesmf_time

#			$(FRAME)/module_internal_header_util.o \
#			$(FRAME)/pack_utils.o

LIBINCLUDE = -I. -I$(INC) -I$(IOAPI_SHARE)

#### Get core settings from environment (set in compile script)
#### Note to add a core, this has to be added to.
NETCDF_IO_PATH  =       external/io_netcdf

COREDEFS = -DEM_CORE=$(EM_CORE)       \
           -DDA_CORE=$(DA_CORE)        \
           -DNMM_CORE=0       \
           -DEXP_CORE=0       \
           -DCOAMPS_CORE=0    \
           -DNMM_MAX_DIM=1250 \
           -DWRFPLUS

#### For wrfvar, always use RWORDSIZE 8

RWORDSIZE	=	8
DWORDSIZE	=	8
WORDSIZE_DEF	=	-DIWORDSIZE=4 -DDWORDSIZE=$(DWORDSIZE) -DRWORDSIZE=$(RWORDSIZE) -DLWORDSIZE=4

#### Single location for defining total number of domains.  You need
#### at least 1 + 2*(number of total nests).  For example, 1 coarse
#### grid + three fine grids = 1 + 2(3) = 7, so MAX_DOMAINS=7.

MAX_DOMAINS	=	1
MAX_PROC	=	1024
RANLIB		=	ranlib

MPI_LIB		=
LOCAL_LIB	=
CONVERTOR_LIB	=

#### DM buffer length for the configuration flags.

CONFIG_BUF_LEN	=	8192

#### Default sed command and script for Fortran source files ####
SED_FTN = sed -f $(ARCH)/standard.sed

#### Architecture specific settings ####

