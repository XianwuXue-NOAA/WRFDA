#
ARCHFLAGS         = $(FPPFLAGS1) $(FPPFLAGS2) -I$(NETCDFPATH)/include 
REGFLAGS          = $(ARCHFLAGS)
CFLAGS            = $(CCFLAGS1) $(CCFLAGS2)
LIB		  = $(NETCDF_LIB) $(RTTOV_LIB) $(MPI_LIB) $(LOCAL_LIB) \
                      $(WRF_LIB) $(EXTRA_LIBS)
EXTRAMODULES      =
FCBASEOPTS        = $(FCTYPE) $(FCBASE) $(FCFREE) $(FCHOST) $(FCDEBUG) \
                      $(FCENDIAN) -I.
FCFLAGS           = $(FCOPTIM) $(FCBASEOPTS) $(OMP)
INCLUDE_MODULES   = -I$(DA_VAR) -I$(DA_SRC) \
		      -I../external/io_netcdf -I../external/io_int \
                      -I../external/esmf_time_f90 \
                      -I../frame -I../share -I../phys -I../inc
MODULE_DIRS       = $(INCLUDE_MODULES)

CPPFLAGS          = $(TRADFLAG) $(LIBINCLUDE) -C -P $(ARCHFLAGS) \
                      $(ENVCOMPDEFS) \
		      $(DM_CPP_FLAGS) $(COREDEFS) $(VAR4DPOSS)

INC_MOD_WRFVAR    = -I../../$(NETCDF_IO_PATH) \
		      -I$(DA_VAR) -I$(DA_SRC) \
                      -I../../external/io_int \
                      -I../../external/esmf_time_f90 \
                      -I../../frame -I../../share -I../../inc
FIXEDFLAGS_ENDIAN = $(FCTYPE)
FIXEDFLAGS_BUFR   = $(FCTYPE) $(FCBASE) $(FCHOST) $(FCDEBUG) -I.
FIXEDFLAGS_WRFVAR = $(FCTYPE) $(FCBASE) $(FCHOST) $(FCDEBUG) $(FCENDIAN) -I.
FUFLAGS           = $(FCOPTIM) $(FCBASE) $(FCFREE) $(FCDEBUG)

wrfio_nf : 
	( cd ../external/io_netcdf ; \
        make NETCDFPATH=$(NETCDFPATH) CPP="$(CPP)" CPPFLAGS="$(CPPFLAGS)" \
	RANLIB="$(RANLIB)" FC="$(FC)" \
        FCFLAGS="$(FCDEBUG) $(FCFREE) $(FCBASE) -w" TRADFLAG="$(TRADFLAG)" )

wrfio_int : 
	( cd ../external/io_int ; \
        make CPP="$(CPP)" RANLIB="$(RANLIB)" \
	CC="$(CC)" FC="$(FC)" FCFLAGS="$(FCDEBUG) $(FCFREE) $(FCBASE)" all )

wrfio_grib1 :
	( cd ../external/io_grib1 ; \
        make CPP="$(CPP)" CPPFLAGS="$(CPPFLAGS)" RANLIB="$(RANLIB)" \
	CC="$(CC)" CFLAGS="$(CFLAGS)" \
	FC="$(FC)" FCFLAGS="$(FCDEBUG) $(LIBINCLUDE) $(FCFREE) $(FCBASE)" )

esmf_time : 
	( cd ../external/esmf_time_f90 ; \
	make FC="$(FC) $(FCFLAGS)" \
	RANLIB="$(RANLIB)" \
	CPP="$(CPP) -I../../inc -I. $(ARCHFLAGS) $(TRADFLAG)" )

# compile these without high optimization to speed compile

module_io_mm5.o : module_io_mm5.f90
module_si_io.o : module_si_io.f90
module_io_wrf.o : module_io_wrf.f90
module_start.o : module_start.f90
module_initialize.o : module_initialize.f90
module_initialize_b_wave.o : module_initialize_b_wave.f90
module_initialize_hill2d_x.o : module_initialize_hill2d_x.f90
module_initialize_quarter_ss.o : module_initialize_quarter_ss.f90
module_initialize_squall2d_x.o : module_initialize_squall2d_x.f90
module_initialize_squall2d_y.o : module_initialize_squall2d_y.f90
module_initialize_real.o : module_initialize_real.f90
module_dm.o : module_dm.f90
start_domain.o : start_domain.f90
module_domain.o : module_domain.f90
module_configure.o : module_configure.f90
mediation_interp_domain.o : mediation_interp_domain.f90
mediation_force_domain.o : mediation_force_domain.f90
mediation_feedback_domain.o : mediation_feedback_domain.f90

module_io_mm5.o module_si_io.o module_io_wrf.o module_domain.o \
module_start.o module_initialize.o module_initialize_b_wave.o  \
module_initialize_hill2d_x.o module_initialize_quarter_ss.o    \
module_initialize_squall2d_x.o module_initialize_squall2d_y.o  \
module_configure.o mediation_interp_domain.o                   \
mediation_force_domain.o mediation_feedback_domain.o           \
module_initialize_real.o module_dm.o start_domain.o :
	$(RM) $@
	$(SED_FTN) $*.f90 > $*.b 
	$(CPP) $(CPPFLAGS) $*.b  > $*.f
	$(RM) $*.b
	$(FC) -c $(FCBASEOPTS) $(MODULE_DIRS) -O0 $*.f

#There is probably no reason to modify these rules

.f90.o:
	@ $(RM) $@
	@ $(SED_FTN) $*.f90 > $*.b
	  $(CPP) $(CPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS) $(MODULE_DIRS) $*.f

.f.o:
	@ $(RM) $@
	  $(FC) -c $(FCFLAGS) $*.f

.c.o:
	@ $(RM) $@
	  $(CC) -c $(CFLAGS) $*.c

