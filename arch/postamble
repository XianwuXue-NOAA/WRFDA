#
FPPFLAGS        = $(FPPFLAGS1) $(FPPFLAGS2) $(COREDEFS) \
                     $(ENVCOMPDEFS) $(DM_FPPFLAGS)
CPPFLAGS        = -C -P $(TRADFLAG) $(INCS) $(DM_CPPFLAGS)
REGFLAGS        = $(FPPFLAGS1) $(FPPFLAGS2) $(DM_FPPFLAGS)
 
CCFLAGS        = $(CCFLAGS1) $(CCFLAGS2) $(CCOPTIM)
LDFLAGS         = $(FCBASE) $(FCOPTIM) $(FCENDIAN) -L$(NETCDF_LIB_PATH) $(LDFLAGS2)

FCFLAGS         = $(FCBASE) $(FCTYPE) $(FCFREE) $(FCENDIAN) $(INCS) $(FCDEBUG) $(FCOPTIM) $(FCWARN)
FCFLAGS_NOWARN  = $(FCBASE) $(FCTYPE) $(FCFREE) $(FCENDIAN) $(INCS) $(FCDEBUG) $(FCOPTIM) 
FCFLAGS_SIMPLE  = $(FCBASE) $(FCTYPE) $(FCFREE) $(FCENDIAN) $(INCS)
FIXEDFLAGS        = $(FCOPTIM) $(FCBASE) $(FCTYPE)
FIXEDFLAGS_ENDIAN = $(FCTYPE) $(FCBASE)

WRFVAR_LIBS  = libwrfio_nf.a libesmf_time.a $(IO_GRIB_SHARE)/libio_grib_share.a \
                 $(IO_GRIB1)/libio_grib1.a \
                 libwrfvar.a $(MPI_LIBS)

WRF_LIBS     = libwrflib.a libwrfio_nf.a libesmf_time.a \
                  $(IO_GRIB_SHARE)/libio_grib_share.a \
                  $(IO_GRIB1)/libio_grib1.a $(MPI_LIBS)

WRFPLUS_LIBS = libwrflib.a libwrfplus.a libwrfio_nf.a libesmf_time.a \
               $(IO_GRIB1)/libio_grib1.a $(IO_GRIB_SHARE)/libio_grib_share.a \
                  $(MPI_LIBS)

WRFVAR_LIB  = -L. $(LAPACK_LIB) -lwrfvar $(NETCDF_LIB)  \
               $(GRIB1_LIB) $(GRIB_SHARE_LIB) $(LOCAL_LIB) $(ESMF_TIME_LIB) \
                $(LAPACK_LIB) $(BLAS_LIB) $(BUFR_LIB) $(FFTPACK_LIB) \
               $(RTTOV_LIB) $(CRTM_LIB) $(MPI_LIB)

WRF_LIB     = -L. -lwrflib \
              $(GRIB1_LIB) $(GRIB_SHARE_LIB) $(LOCAL_LIB) $(NETCDF_LIB) \
                 $(MPI_LIB)

WRFPLUS_LIB = -L. $(NETCDF_LIB) -lwrflib -lwrfplus \
              $(GRIB1_LIB) $(GRIB_SHARE_LIB) $(LOCAL_LIB) $(NETCDF_LIB) \
                 $(MPI_LIB)

GEN_BE_LIB =  $(NETCDF_LIB) -L. $(LAPACK_LIB) $(BLAS_LIB) $(FFTPACK_LIB) \
              $(LOCAL_GEN_BE_LIB) $(LOCAL_LIB)
                  

# compile these simply (no debug or optimisation) to speed compile

module_io_mm5.o module_si_io.o module_io_wrf.o module_domain.o \
module_start.o module_initialize.o module_initialize_b_wave.o  \
module_initialize_hill2d_x.o module_initialize_quarter_ss.o    \
module_initialize_squall2d_x.o module_initialize_squall2d_y.o  \
module_configure.o mediation_interp_domain.o                   \
mediation_force_domain.o mediation_feedback_domain.o           \
module_initialize_real.o module_dm.o start_domain.o \
nest_init_utils.o couple_or_uncouple_em.o solve_interface.o :
	@ $(RM) $@
	@ $(SED_FTN) $*.F > $*.b 
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS_SIMPLE) $*.f

# compile these without warnings, as they generate too many

interp_fcn.o init_modules.o mediation_integrate.o \
   mediation_wrfmain.o module_bc.o set_timekeeping.o \
   wrf_fddaobs_in.o module_get_file_names.o module_io_quilt \
   module_integrate.o module_nesting.o module_machine.o \
   module_wrf_error.o module_timing.o io_grib_share.o \
   module_date_time.o module_io.o module_io_domain.o \
   module_tiles.o module_io_quilt.o \
   wrf_debug.o wrf_shutdown.o input_wrf.o \
   wrf_auxhist1in.o wrf_auxhist2in.o wrf_auxhist3in.o \
   wrf_auxhist4in.o wrf_auxhist5in.o wrf_auxhist6in.o \
   wrf_auxhist7in.o wrf_auxhist8in.o wrf_auxhist9in.o \
   wrf_auxhist10in.o wrf_auxhist11in.o \
   wrf_auxhist1out.o wrf_auxhist2out.o wrf_auxhist3out.o \
   wrf_auxhist4out.o wrf_auxhist5out.o wrf_auxhist6out.o \
   wrf_auxhist7out.o wrf_auxhist8out.o wrf_auxhist9out.o \
   wrf_auxhist10out.o wrf_auxhist11out.o \
   wrf_auxinput1in.o wrf_auxinput2in.o wrf_auxinput3in.o \
   wrf_auxinput4in.o wrf_auxinput5in.o wrf_auxinput6in.o \
   wrf_auxinput7in.o wrf_auxinput8in.o wrf_auxinput9in.o \
   wrf_auxinput10in.o wrf_auxinput11in.o \
   wrf_auxinput1out.o wrf_auxinput2out.o wrf_auxinput3out.o \
   wrf_auxinput4out.o wrf_auxinput5out.o wrf_auxinput6out.o \
   wrf_auxinput7out.o wrf_auxinput8out.o wrf_auxinput9out.o \
   wrf_auxinput10out.o wrf_auxinput11out.o wrf_restartin.o \
   wrf_histin.o output_wrf.o wrf_restartout.o \
   wrf_ext_read_field.o wrf_ext_write_field.o \
   wrf_bdyout.o wrf_bdyin.o :
	@ $(RM) $@
	@ $(SED_FTN) $*.F > $*.b 
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS_NOWARN) $*.f

ESMF_Mod.o ESMF_Calendar.o ESMF_Stubs.o ESMF_BaseTime.o ESMF_Base.o \
   ESMF_TimeInterval.o ESMF_Time.o ESMF_Alarm.o ESMF_Clock.o \
   ESMF_AlarmClock.o Meat.o  module_utility.o \
   module_symbols_util.o :
	@ $(RM) $@
	@ $(SED_FTN) $*.F90 > $*.b 
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS_NOWARN) $*.f

module_ssmi.o module_ffts.o gsi_thinning.o f_qv_from_rh.o rad_bias.o \
   regress_one.o tred2.o tqli.o da_bias_airmass.o :
	@ $(RM) $@
	@ $(SED_FTN) $*.f90 > $*.b 
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS_NOWARN) $*.f

# Remove implicit rules to ensure our multi-stage process works

.f.o :

.f90.o : 
	@ $(RM) $@
	@ $(SED_FTN) $*.f90 > $*.b
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS) $*.f

.F90.o : 
	@ $(RM) $@
	@ $(SED_FTN) $*.F90 > $*.b
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS) $*.f

.F.o : 
	@ $(RM) $@
	@ $(SED_FTN) $*.F > $*.b
	@ $(CPP) $(CPPFLAGS) $(FPPFLAGS) $*.b  > $*.f
	@ $(RM) $*.b
	  $(FC) -c $(FCFLAGS) $*.f

.c.o: 
	@ $(RM) $@
	  $(CC) -c $(CCFLAGS) $*.c

