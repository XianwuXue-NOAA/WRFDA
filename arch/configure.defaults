###########################################################
#ARCH Template
#
# Tools (preprocessor, fortran, c, loader)
CPP             = /lib/cpp
M4              = m4
FC              = mpif90
FFC             = pgf90
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

# Flags (preprocessor, fortran, c, loader)
NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     =
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL_LITE -DDM_PARALLEL

FCOPTIM         = # O2
FCDEBUG         = # -g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_FCFLAGS   = -Ktrap=fp
EXTRA_CCFLAGS   =
RSL_CCFLAGS     = -DLEARN_BCAST

# Libraries

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -lrsl_lite

# Architecture

arch : rsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compilers, serial      (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

RSL_CCFLAGS     =

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compilers, debug       (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

EXTRA_LDFLAGS   = -V


arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compilers, optimised   (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fast
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compilers, debug       (RSL_LITE, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE) -D
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DDM_PARALLEL -DRSL_LITE

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = 
RSL_CCFLAGS     = -DMPI2_SUPPORT -DLEARN_BCAST

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI compilers, optimised   (RSL_LITE, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DDM_PARALLEL -DRSL_LITE

FCOPTIM         = -O2 -fast
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = 
RSL_CCFLAGS     = -DMPI2_SUPPORT -DLEARN_BCAST

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :
	
###########################################################
#ARCH Settings for PC Linux i486 i586 i686, GNU compilers, serial      (Single-threaded)
#
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         = 
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,155,158,159
FCTYPE          = -r$(RWORDSIZE)

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, GNU compilers, debug       (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCWARN          = -Wall -Wextra -Wunused-module-procs -Wunused-module-vars \
                     -Wunused-types -Wimplicit-none
                     
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -Wno=101,112,136,155,158,159,165 -fno-second-underscore
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, GNU compilers, optimised   (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = 
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,155,158,159
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCOPTIM         = -O2
EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, GNU compilers, debug       (RSL_LITE, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DRSL_LITE -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCWARN          = -Wall -Wextra -Wunused-module-procs -Wunused-module-vars \
                     -Wunused-types -Wimplicit-none
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -Wno=101,112,136,155,158,159,165 -fno-second-underscore
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCOPTIM         =
EXTRA_CCFLAGS   =
RSL_CCFLAGS     = -DMPI2_SUPPORT -DLEARN_BCAST

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, GNU compilers, optimised   (RSL_LITE, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DRSL_LITE -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = 
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,155,158,159
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCOPTIM         = -O2
EXTRA_CCFLAGS   =
RSL_CCFLAGS     = -DMPI2_SUPPORT -DLEARN_BCAST

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, Intel compilers, serial, untested    (Single-threaded)
#

M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         =
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCTYPE          = -r$(RWORDSIZE)

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, Intel compilers, debug, untested     (RSL, MPI)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = -g -C
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, Intel compilers, optimised, untested (RSL, MPI)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O3 -xW
FCDEBUG         =
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCTYPE          = -r$(RWORDSIZE)
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )


###########################################################
#ARCH Settings for PC Linux x86_64, PGI compilers, serial              (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp

RSL_CCFLAGS     =

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :


###########################################################
#ARCH Settings for PC Linux x86_64, PGI compilers, debug               (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = 

EXTRA_LDFLAGS   = -V

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, PGI compilers, optimised           (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fastsse
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = 

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale compilers, serial, untested    (Single-threaded)
#
FC              = pathf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
EXTRA_FCFLAGS   = -fno-second-underscore
RSL_FCFLAGS     = $(FCENDIAN) $(EXTRA_FCFLAGS)

RSL_CCFLAGS     =

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale compilers, debug, untested     (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
EXTRA_FCFLAGS   = -fno-second-underscore
RSL_FCFLAGS     = $(FCENDIAN) $(EXTRA_FCFLAGS)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale compilers, optimised, untested (RSL, MPI)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
EXTRA_FCFLAGS   = -fno-second-underscore
RSL_FCFLAGS     = $(FCENDIAN) $(EXTRA_FCFLAGS)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Intel compilers, serial, untested    (Single-threaded)
#
M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian

RSL_CCFLAGS     =

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, Intel compilers, debug, untested     (RSL, MPI)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
# Switch off debug options to stop running out of memory
FCDEBUG         = #-g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Intel compilers, optimised, untested (RSL, MPI)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
EXTRA_FPPFLAGS  = -DIO_DEREF_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -xW
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL
RSL_CCFLAGS     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################

#ARCH Settings for SGI 64 bit machine IRIX64, optimised, untested (single-threaded)
#

M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = $(CC)
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNORESHAPE -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = -O2
FCDEBUG         = # -g
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        = -64 -mips4
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -w -64 -mips4 -DUNDERSCORE -DIRIX
RSL_CCFLAGS     = 

LOCAL_LIB       = 

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for SGI O2K DM IRIX64, optimised, untested    (RSL, SGI-MPI)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = $(FC)
CC              = mpicc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
EXTRA_FPPFLAGS  = -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL
FCOPTIM         = -O3 -OPT:roundoff=3:IEEE_arithmetic=3
FCDEBUG         = # -g
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        = -64 -mips4
EXTRA_FCFLAGS   = -w
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -w -64 -mips4 -DIRIX -I$(RSL)/RSL
RSL_CCFLAGS     =

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl -lmpi

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST o2k )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for SGI Altix, Intel Itanium2 ia64 Linux, Intel compilers, optimised, untested (RSL, SGI-MPI)
#
# Process pinning should be used -- set the environment
#  variable MPI_DSM_DISTRIBUTE on a dedicated system, when
#  running through the cpuset command, or when using a batch
#  scheduler that has dynamic cpuset support enabled.  In
#  other cases, if specific processors are known to be free,
#  the environment variable MPI_DSM_CPULIST may be used
#  (details in 'man mpi').

# Draft version to be reviewed by Gerardo Cisneros <gerardo@sgi.com>

M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = $(FC)
CC              = mpicc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
EXTRA_FPPFLAGS  = -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL
FCOPTIM         = -O3
FCDEBUG         = # -g
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -freeform
FCENDIAN        =
EXTRA_FCFLAGS   = -w -ip -tpp2 -ftz -convert big_endian -fno-alias -fno-fnalias \
                     -align all -IPF_fp_relaxed
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -w -O3 -ip -tpp2 -c -ftz -no-gcc -I$(RSL)/RSL 
RSL_CCFLAGS     =

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl -lmpi

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST o2k )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for NEC, serial, untested                     (single-threaded)
#
CPP             = /usr/lib0/cpp
M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

MAX_PROC        = 256

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMPI -I$(MPIINCDIR) -DNEC -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
FCOPTIM         =
FCDEBUG         =
FCTYPE          =
FCFREE          = -f4
FCENDIAN        =
EXTRA_FCFLAGS   = -C hopt \
		  -Wf"-init stack=zero heap=zero -pvctl loopcnt=100000000 noassume -O nooverlap" \
                  -pi -ew -eb -float0 -Wf"-L fmtlist"

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for AIX, IBM compilers, serial                          (single-threaded)
#
M4              = m4 -B24000
FC              = xlf90_r
FFC             = xlf_r
SFC             = $(FC)
CC              = cc_r
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -qrealsize=$(RWORDSIZE)
FCFREE          = -qfree=f90
FCFIXED         = -qfixed
FCENDIAN        =
EXTRA_FCFLAGS   = -w -qspill=20000 -qmaxmem=32767 -qarch=auto \
                    -qflttrap=zerodivide:invalid:nanq:enable -qsigtrap=xl__trce

EXTRA_CCFLAGS   = -DNOUNDERSCORE -DNCARIBM_NOC99 -DFSEEKO64_OK -qcpluscmt

EXTRA_LDFLAGS   = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for AIX, IBM compilers, debug                           (RSL, IBM-MPI)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = -g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008 -qflttrap=zerodivide:invalid:nanq:enable \
                  -qsigtrap=xl__trce
FCTYPE          = -qrealsize=$(RWORDSIZE)
FCFREE          = -qfree=f90
FCFIXED         = -qfixed
FCENDIAN        =
EXTRA_FCFLAGS   = -w -qspill=20000 -qmaxmem=32767 -qarch=auto
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -DNOUNDERSCORE -DNCARIBM_NOC99 -DFSEEKO64_OK -I$(RSL)/RSL -qcpluscmt
RSL_CCFLAGS     =

EXTRA_LDFLAGS   = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(RSL_CCFLAGS)" FC="mpxlf $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for AIX, IBM compilers, optimised                       (RSL, IBM-MPI)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = 
FCTYPE          = -qrealsize=$(RWORDSIZE)
FCFREE          = -qfree=f90
FCFIXED         = -qfixed
FCENDIAN        =
EXTRA_FCFLAGS   = -w -qspill=20000 -qmaxmem=32767 -qarch=auto
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -DNOUNDERSCORE -DNCARIBM_NOC99 -DFSEEKO64_OK -I$(RSL)/RSL -qcpluscmt
RSL_CCFLAGS     =

EXTRA_LDFLAGS   = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(RSL_CCFLAGS)" FC="mpxlf $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for AIX, IBM compilers, debug                           (RSL_LITE, IBM-MPI)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DDM_PARALLEL -DRSL_LITE

FCOPTIM         = 
FCDEBUG         = -g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008 -qflttrap=zerodivide:invalid:nanq:enable \
                  -qsigtrap=xl__trce
FCTYPE          = -qrealsize=$(RWORDSIZE)
FCFREE          = -qfree=f90
FCFIXED         = -qfixed
FCENDIAN        =
EXTRA_FCFLAGS   = -w -qspill=20000 -qmaxmem=32767 -qarch=auto
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -DNOUNDERSCORE -DNCARIBM_NOC99 -DFSEEKO64_OK -qcpluscmt
RSL_CCFLAGS     = -DLEARN_BCAST -DMPI2_SUPPORT

EXTRA_LDFLAGS   = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for AIX, IBM compilers, optimised                       (RSL_LITE, IBM-MPI)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = 
DM_FPPFLAGS     = -DDM_PARALLEL -DRSL_LITE

FCOPTIM         = -O2
FCDEBUG         = 
FCTYPE          = -qrealsize=$(RWORDSIZE)
FCFREE          = -qfree=f90
FCFIXED         = -qfixed
FCENDIAN        =
EXTRA_FCFLAGS   = -w -qspill=20000 -qmaxmem=32767 -qarch=auto
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -DNOUNDERSCORE -DNCARIBM_NOC99 -DFSEEKO64_OK -qcpluscmt
RSL_CCFLAGS     = -DLEARN_BCAST -DMPI2_SUPPORT

EXTRA_LDFLAGS   = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
MPI_LIB         = -lrsl_lite

arch : librsl_lite.a
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for cray_x1 UNICOS/mp CRAY X1, serial          (Single-threaded) 

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
EXTRA_FPPFLAGS  = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
FCOPTIM         =
FCDEBUG         =
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
EXTRA_FCFLAGS  = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                     -p$(RTTOV_INC) -p$(CRTM_INC) -p$(PNETCDF_INC) -p$(HDF_INC) \
                     -p$(PHDF5_INC)

EXTRA_CCFLAGS   = -UCRAY -Dcrayx1
# Cray linker very fussy about availablity of modules, so give it a very wide scope
LOCAL_LIB       = 

arch : 
	$(LN) $(RSL_STUBS)/* .
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for cray_x1 UNICOS/mp CRAY X1, debug           (RSL, Cray MPI)

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
EXTRA_FPPFLAGS  = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g
# -Ra causes a segfault with da_par_utils
FCWARN          = -Rbcs
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
EXTRA_FCFLAGS   = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                     -p$(RTTOV_INC)  -p$(CRTM_INC) -p$(PNETCDF_INC) \
                     -p$(HDF_INC) -p$(PHDF5_INC)
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -UCRAY -Dcrayx1 -I$(RSL)/RSL
RSL_CCFLAGS     = -Dcrayx1 -DMPI2_SUPPORT

EXTRA_LDFLAGS   = -V

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
             MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for cray_x1 UNICOS/mp CRAY X1, optimised       (RSL, Cray MPI)

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
EXTRA_FPPFLAGS  = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -Ofp3 -O3
FCDEBUG         = 
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
EXTRA_FCFLAGS   = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                    -p$(RTTOV_INC) -p$(CRTM_INC) -p$(PNETCDF_INC) \
                    -p$(HDF_INC) -p$(PHDF5_INC)
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -UCRAY -Dcrayx1 -I$(RSL)/RSL
RSL_CCFLAGS     = -Dcrayx1 -DMPI2_SUPPORT

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
             MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, GNU compilers, serial                 (single-threaded)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,155,158,159

EXTRA_CCFLAGS   = -DLANDREAD_STUB -DMACOS

LOCAL_LIB       = -lSystemStubs

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for Darwin, GNU compilers, debug                  (RSL, MPI)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCWARN          = -Wall -Wextra -Wunused-module-procs -Wunused-module-vars \
                     -Wunused-types -Wunused-parameter
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,112,136,155,158,159,165
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

EXTRA_CCFLAGS   = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
RSL_CCFLAGS     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

MPI_LIB         = -L$(RSL)/RSL -lrsl
LOCAL_LIB       = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, GNU compilers, optimised              (RSL, MPI)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
LD              = $(FC)
CC              = mpicc
CC_TOOLS        = gcc

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DG95 \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -ffree-form -ffree-line-length-huge
FCFIXED         = -ffixed-form
FCENDIAN        =
EXTRA_FCFLAGS   = -cpp -fno-second-underscore -Wno=101,155,158,159
RSL_FCFLAGS     = $(FCENDIAN) -ffixed-form -fno-second-underscore

EXTRA_CCFLAGS   = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
RSL_CCFLAGS     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT
CCOPTIM         = -O2

MPI_LIB         = -L$(RSL)/RSL -lrsl
LOCAL_LIB       = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, PGI compilers, serial                 (Single-threaded)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp

EXTRA_CCFLAGS   = -DLANDREAD_STUB -DMACOS

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for Darwin, PGI compilers, debug                  (RSL, MPI)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = 
EXTRA_FPPFLAGS  = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL -DMACOS
RSL_CCFLAGS     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

EXTRA_LDFLAGS   = -V


arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, PGI compilers, optimised              (RSL, MPI)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
EXTRA_FPPFLAGS  = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM \
                     -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fast
FCDEBUG         =
FCTYPE          = -r$(RWORDSIZE)
FCFREE          = -Mfree
FCFIXED         = -Mfixed
FCENDIAN        = -byteswapio
EXTRA_FCFLAGS   = -Ktrap=fp
RSL_FCFLAGS     = $(FCENDIAN)

EXTRA_CCFLAGS   = -I$(RSL)/RSL -DMACOS
RSL_CCFLAGS     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c $(RSL)/*.F $(RSL)/RSL/*.h $(RSL)/RSL/*.inc .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(RSL_CCFLAGS)" FC="$(FC) $(RSL_FCFLAGS)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH  NULL

