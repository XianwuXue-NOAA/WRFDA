###########################################################
#ARCH Template
#
# Tools (preprocessor, fortran, c, loader)
CPP             = /lib/cpp
M4              = m4
FC              = mpif90
FFC             = pgf90
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

# Flags (preprocessor, fortran, c, loader)
NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = # O2
FCDEBUG         = # -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

# Libraries

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

# Architecture

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI, serial      (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -lg2c

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI, simple      (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI, debug       (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl

LDFLAGS2        = -V


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, PGI, optimised   (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fast
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95, serial      (Single-threaded)
#
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         = 
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159
FCTYPE          = -r8

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -L/usr/lib/gcc/i386-redhat-linux/3.4.3 -lg2c

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95, simple      (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159 
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -L/usr/lib/gcc/i386-redhat-linux/3.4.3 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95, debug       (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCWARN          = -Wall -Wextra -Wunused-module-procs -Wunused-module-vars \
                     -Wunused-types -Wimplicit-none
                     
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -Wno=101,112,136,155,158,159 \
                     -fno-second-underscore -ftrace=full -finteger=-9999 \
                     -freal=nan
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LDFLAGS2        =

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -L/usr/lib/gcc/i386-redhat-linux/3.4.3 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, g95, optimised   (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         = 
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCOPTIM         = -O2
CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c -L/usr/X11R6/lib \
                     -lX11 -L/usr/lib/gcc/i386-redhat-linux/3.4.3 -lg2c
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )



###########################################################
#ARCH Settings for PC Linux i487 i587 i687, g95, simple      (RSL_LITE, MPI, RSL IO)
#Not working yet
#
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM 
                    
DM_CPPFLAGS     = -I$(RSL_LITE)
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL_LITE -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159 
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN) -fno-second-underscore

CCFLAGS2        = -I$(RSL_LITE)
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL_LITE) -lrsl

arch : 
	$(LN) $(RSL_LITE)/*.c .
	$(LN) $(RSL_LITE)/*.F .
	( cd $(RSL_LITE) ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST all )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, ifort, serial, untested   (single-threaded)
#

M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         =
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCTYPE          = -r8

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, ifort, simple, untested   (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = 
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          =
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, ifort, debug, untested    (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = -g -C
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          =
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux i486 i586 i686, ifort, optimised, untested (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O3 -xW
FCDEBUG         =
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          =
FCTYPE          = -r8
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )


###########################################################
#ARCH Settings for PC Linux x86_64, PGI, serial              (Single-threaded)
#
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, PGI, simple              (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          =  -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, PGI, debug               (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          =  -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

LDFLAGS2        = -V

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, PGI, optimised           (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fastsse
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          =  -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = 

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale, serial, untested    (Single-threaded)
#
FC              = pathf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS_RSL     =

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale, simple, untested    (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale, debug, untested     (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LDFLAGS2        =

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, Pathscale, optimised, untested (RSL, MPI, RSL IO)
#
FC              = mpif90
FFC             = $(FC)
SFC             = pathf90
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        = -convert big_endian
FCBASE          = -fno-second-underscore
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, ifort, serial, untested     (Single-threaded)
#
M4              = m4 -B12000
FC              = ifort
FFC             = $(FC)
SFC             = $(FC)
CC              = icc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 

CCFLAGS_RSL     =

LDFLAGS         = $(FCBASE) $(FCOPTIM) $(FCENDIAN)

LOCAL_LIB       = -L/usr/local/lib

arch :
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for PC Linux x86_64, ifort, simple, untested     (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, ifort, debug, untested      (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
# Switch off debug options to stop running out of memory
FCDEBUG         = #-g -C
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for PC Linux x86_64, ifort, optimised, untested (RSL, MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = ifort
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional
FPPFLAGS2       = -DIO_DEREF_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DIFORT_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
		     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -xW
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -FR -cm -w
FCENDIAN        = -convert big_endian
FCBASE          = 
FCFLAGS_RSL     = $(FCENDIAN) $(FCBASE)

CCFLAGS2        = -I$(RSL)/RSL
CCFLAGS_RSL     = -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
          MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
          LEARN_BCAST=-DLEARN_BCAST linux )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################

#ARCH Settings for SGI 64 bit machine IRIX64, optimised, untested (single-threaded)
#

M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = $(CC)
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DNORESHAPE -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = -O2
FCDEBUG         = # -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        =
FCBASE          = -64 -mips4
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -w -64 -mips4 -DUNDERSCORE -DIRIX
CCFLAGS_RSL     = 

LOCAL_LIB       = 

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for SGI O2K DM IRIX64, optimised, untested    (RSL, SGI-MPI, RSL IO)
#
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = $(FC)
CC              = mpicc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL
FCOPTIM         = -O3 -OPT:roundoff=3:IEEE_arithmetic=3
FCDEBUG         = # -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        =
FCBASE          = -64 -mips4 -w
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -w -64 -mips4 -DIRIX -I$(RSL)/RSL
CCFLAGS_RSL     =

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl -lmpi

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST o2k )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for SGI Altix, Intel Itanium2 ia64 Linux, ifort, optimised, untested (RSL, SGI-MPI, RSL IO)
#
# Process pinning should be used -- set the environment
#  variable MPI_DSM_DISTRIBUTE on a dedicated system, when
#  running through the cpuset command, or when using a batch
#  scheduler that has dynamic cpuset support enabled.  In
#  other cases, if specific processors are known to be free,
#  the environment variable MPI_DSM_CPULIST may be used
#  (details in 'man mpi').

# Draft version to be reviewed by Gerardo Cisneros <gerardo@sgi.com>

M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = $(FC)
CC              = mpicc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DIRIX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL
FCOPTIM         = -O3
FCDEBUG         = # -g
FCTYPE          = -r8
FCFREE          = -freeform
FCENDIAN        =
FCBASE          = -w -ip -tpp2 -ftz -convert big_endian -fno-alias -fno-fnalias \
                     -align all -IPF_fp_relaxed
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -w -O3 -ip -tpp2 -c -ftz -no-gcc -I$(RSL)/RSL 
CCFLAGS_RSL     =

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl -lmpi

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST o2k )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for NEC, serial, untested                     (single-threaded)
#
CPP             = /usr/lib0/cpp
M4              = m4 -B12000
FC              = f90
FFC             = $(FC)
SFC             = $(FC)
CC              = cc
CC_TOOLS        = cc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

MAX_PROC        = 256

TRADFLAG        =
FPPFLAGS2       = -DMPI -I$(MPIINCDIR) -DNEC -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
FCOPTIM         =
FCDEBUG         =
FCTYPE          =
FCFREE          = -f4
FCENDIAN        =
FCBASE          = -C hopt \
		  -Wf"-init stack=zero heap=zero -pvctl loopcnt=100000000 noassume -O nooverlap" \
                  -pi -ew -eb -float0 -Wf"-L fmtlist"

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for AIX, xlf, serial                          (single-threaded)
#
M4              = m4 -B24000
FC              = xlf90_r
FFC             = xlf_r
SFC             = $(FC)
CC              = cc_r
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767 \
                    -qflttrap=zerodivide:invalid:nanq:enable -qsigtrap=xl__trce

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99

LDFLAGS2        = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c \
                      -L/usr/X11R6/lib -lX11

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for AIX, xlf, simple                          (RSL, IBM-MPI, RSL IO)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = 
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99 -I$(RSL)/RSL
CCFLAGS_RSL     =

LDFLAGS2        = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c \
                      -L/usr/X11R6/lib -lX11
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(CCFLAGS_RSL)" FC="mpxlf $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for AIX, xlf, debug                           (RSL, IBM-MPI, RSL IO)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = 
FCDEBUG         = -g -qfullpath -C -qinitauto -qflag=I:I -qtbtable=full \
                  -qsuppress=1514-008 -qflttrap=zerodivide:invalid:nanq:enable \
                  -qsigtrap=xl__trce
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99 -I$(RSL)/RSL
CCFLAGS_RSL     =

LDFLAGS2        = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c \
                      -L/usr/X11R6/lib -lX11
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(CCFLAGS_RSL)" FC="mpxlf $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for AIX, xlf, optimised                       (RSL, IBM-MPI, RSL IO)
#
M4              = m4 -B24000
FC              = mpxlf90_r
FFC             = xlf_r
SFC             = xlf90_r
CC              = mpcc_r
CC_TOOLS        = cc_r
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        =
FPPFLAGS2       = -DNATIVE_MASSV -DNORESHAPE -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -qarch=auto
FCDEBUG         = 
FCTYPE          = -qrealsize=8
FCFREE          = -qfree=f90
FCENDIAN        =
FCBASE          = -w -qspill=20000 -qmaxmem=32767
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -DNOUNDERSCORE -DNCARIBM_NOC99 -I$(RSL)/RSL
CCFLAGS_RSL     =

LDFLAGS2         = -bmaxstack:256000000 -bmaxdata:2048000000

LOCAL_LIB       = -lmass -lmassv
NCARG_LIB       = -L$(NCARG_ROOT)/lib -lncarg -lncarg_gks -lncarg_c \
                      -L/usr/X11R6/lib -lX11
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="mpcc $(CCFLAGS_RSL)" FC="mpxlf $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST sp2 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for crayx1 UNICOS/mp CRAY X1, serial          (Single-threaded) 

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
FCOPTIM         =
FCDEBUG         =
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                     -p$(RTTOV_INC) -p$(CRTM_INC)

CCFLAGS2        = -UCRAY -Dcrayx1
# Cray linker very fussy about availablity of modules, so give it a very wide scope
LOCAL_LIB       = 

arch : 
	$(LN) $(RSL_STUBS)/* .
	@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for crayx1 UNICOS/mp CRAY X1, simple          (RSL, Cray MPI, RSL IO)

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE        = 8

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                     -p$(RTTOV_INC)  -p$(CRTM_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -UCRAY -Dcrayx1 -I$(RSL)/RSL -h gen_private_callee
CCFLAGS_RSL     = -Dcrayx1 -DMPI2_SUPPORT

LDFLAGS2        = -V

LOCAL_LIB       =
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch :
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
             MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )


###########################################################
#ARCH Settings for crayx1 UNICOS/mp CRAY X1, debug           (RSL, Cray MPI, RSL IO)

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g 
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                     -p$(RTTOV_INC)  -p$(CRTM_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -UCRAY -Dcrayx1 -I$(RSL)/RSL -h gen_private_callee
CCFLAGS_RSL     = -Dcrayx1 -DMPI2_SUPPORT

LDFLAGS2        = -V

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
             MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for crayx1 UNICOS/mp CRAY X1, optimised       (RSL, Cray MPI, RSL IO)

SED_FTN         = sed -f ../arch/cray_csd.sed
M4              = m4 -B12000
FC              = ftn
SFC             = ftn
FFC             = $(FC)
CC              = cc
# Do not use cross-compiler for tools
CC_TOOLS        = gcc
RANLIB          = echo
LD              = $(FC)

NATIVE_RWORDSIZE	= 8

TRADFLAG        = -traditional-cpp
FPPFLAGS2       = -DNORESHAPE -Dcrayx1 -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -Ofp3 -O3
FCDEBUG         = 
FCTYPE          = -sreal64 -dp -em -eh
FCFREE          = -f free -N 255
FCENDIAN        =
FCBASE          = -p$(BLAS_INC) -p$(LAPACK_INC) -p$(FFTPACK_INC) \
                    -p$(RTTOV_INC) -p$(CRTM_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -UCRAY -Dcrayx1 -I$(RSL)/RSL -h gen_private_callee
CCFLAGS_RSL     = -Dcrayx1 -DMPI2_SUPPORT

LOCAL_LIB       = 
MPI_LIB         = -L$(RSL)/RSL -lrsl

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
             MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
             LEARN_BCAST=-DLEARN_BCAST crayx1 )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, g95, serial                 (single-threaded)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = g95
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         = 
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -ffree-form -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159

CCFLAGS2        = -DLANDREAD_STUB -DMACOS

LOCAL_LIB       = -lSystemStubs

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for Darwin, i386, g95, simple                 (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -r8
FCFREE          = -ffree-form -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

MPI_LIB         = -L$(RSL)/RSL -lrsl
LOCAL_LIB       = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, g95, debug                  (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
CC              = mpicc
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -ftrace=full -finteger=-9999 -freal=nan -C
FCWARN          = -Wall -Wextra -Wunused-module-procs -Wunused-module-vars \
                     -Wunused-types -Wunused-parameter
FCTYPE          = -r8
FCFREE          = -ffree-form -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore \
                     -Wno=101,112,136,155,158,159
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LDFLAGS2        =

MPI_LIB         = -L$(RSL)/RSL -lrsl
LOCAL_LIB       = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, g95, optimised              (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = g95
LD              = $(FC)
CC              = mpicc
CC_TOOLS        = gcc

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DNONSTANDARD_SYSTEM -DMAC_KLUDGE -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                     
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -ffree-form  -ffree-line-length-huge
FCENDIAN        =
FCBASE          = -cpp -fno-second-underscore -Wno=101,155,158,159
FCFLAGS_RSL     = $(FCENDIAN) -ffixed-form -fno-second-underscore

CCFLAGS2        = -I$(RSL)/RSL -DLANDREAD_STUB -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT
CCOPTIM         = -O2

MPI_LIB         = -L$(RSL)/RSL -lrsl
LOCAL_LIB       = -lSystemStubs

arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, PGI, serial                 (Single-threaded)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = pgf90
FFC             = $(FC)
SFC             = $(FC)
CC              = gcc
CC_TOOLS        = $(CC)
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)

FCOPTIM         =
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)

CCFLAGS2        = -DLANDREAD_STUB -DMACOS

LOCAL_LIB       = -L/usr/local/lib

arch : 
		$(LN) $(RSL_STUBS)/* .
		@ touch arch

arch_clean :

arch_superclean :

###########################################################
#ARCH Settings for Darwin, i386, PGI, simple                 (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = 
FPPFLAGS2       = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = 
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, PGI, debug                  (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        = 
FPPFLAGS2       = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         =
FCDEBUG         = -g -C
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl

LDFLAGS2        = -V


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH Settings for Darwin, i386, PGI, optimised              (RSL, MPI, RSL IO)
#
CPP             = /usr/bin/cpp
M4              = m4 -B12000
FC              = mpif90
FFC             = $(FC)
SFC             = pgf90
CC              = mpicc -DMPI2_SUPPORT
CC_TOOLS        = gcc
LD              = $(FC)

NATIVE_RWORDSIZE	= 4

TRADFLAG        =
FPPFLAGS2       = -DMACOS -DMAC_KLUDGE -DLINUX -DNONSTANDARD_SYSTEM -DNATIVE_RWORDSIZE=$(NATIVE_RWORDSIZE)
                    
DM_CPPFLAGS     = -I$(RSL)/RSL
DM_FPPFLAGS     = `cat inc/dm_comm_cpp_flags` -DRSL -DDM_PARALLEL

FCOPTIM         = -O2 -fast
FCDEBUG         =
FCTYPE          = -r8
FCFREE          = -Mfree
FCENDIAN        = -byteswapio
FCBASE          = -Ktrap=fp -I$(NETCDF_INC) -I$(BLAS_INC) -I$(LAPACK_INC) -I$(FFTPACK_INC) \
                     -I$(CRTM_INC) -I$(RTTOV_INC)
FCFLAGS_RSL     = $(FCENDIAN)

CCFLAGS2        = -I$(RSL)/RSL -DMACOS
CCFLAGS_RSL     = -DMACOS -I/usr/include/sys -DMPI2_SUPPORT

LOCAL_LIB       = -L/usr/local/lib
MPI_LIB         = -L$(RSL)/RSL -lrsl


arch : 
	$(LN) $(RSL)/*.c .
	$(LN) $(RSL)/*.F .
	( cd $(RSL)/RSL ; \
          $(MAKE) CC="$(CC) $(CCFLAGS_RSL)" FC="$(FC) $(FCFLAGS_RSL)" \
            MAX_DOMAINS=$(MAX_DOMAINS) MAX_PROC=$(MAX_PROC) \
            LEARN_BCAST=-DLEARN_BCAST darwin )
	@ touch arch

arch_clean :
	( cd $(RSL)/RSL; make clean )

arch_superclean :
	( cd $(RSL)/RSL; make superclean )

###########################################################
#ARCH  NULL

