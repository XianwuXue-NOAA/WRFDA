#------------------------------------------------------------------------------
#
# NAME:
#       make.macros
#
# PURPOSE:
#       Unix make utility include file for definition of various make flags
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.macros
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, CIMSS/SSEC 08-Jun-2000
#                       paul.vandelst@ssec.wisc.edu
#
#  Copyright (C) 2000 Paul van Delst
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#------------------------------------------------------------------------------

#################################################################################
#                                                                               #
#                        GENERAL USE MACRO SPECIFICATION                        #
#                                                                               #
#################################################################################

# --------------------
# Define default shell
# --------------------

SHELL = /bin/sh


# -------------------------------------
# Define link, copy and delete commands
# -------------------------------------

LINK = ln -sf
COPY = cp -v 
MOVE = mv -f
REMOVE = rm -f


# -------------------------
# Define tarballer commands
# -------------------------

TARBALLER = tar
TARBALL_CREATE = $(TARBALLER) cvhf
TARBALL_APPEND = $(TARBALLER) rvhf
TARBALL_EXTRACT = $(TARBALLER) xvhf


# -------------------------
# Define archiver and flags
# -------------------------

ARCHIVER = ar
ARCHIVER_FLAGS = crvs



#################################################################################
#                                                                               #
#                      SPECIFIC PLATFORM FLAG SPECIFICATION                     #
#                                                                               #
#################################################################################

#-------------------------------------------------------------------------------#
#                           -- IBM AIX xlf95 compiler --                        #
#                                                                               #
# NOTE: There are two sets of AIX flags.                                        #
#       DEBUG and PRODUCTION.                                                   #
#       See AIX_FLAGS definition for default.                                   #
#-------------------------------------------------------------------------------#

# -- The compiler and linker name
NAME_AIX = xlf95

# -- Compiler settings for DEBUG builds
AIX_COMMON_FLAGS_DEBUG = 
AIX_FLAGS_DEBUG = "FC=${NAME_AIX}" \
	          "FL=${NAME_AIX}" \
	          "FC_FLAGS= -c \
                             -qcheck \
                             -qdbg \
                             -qextchk \
                             -qfloat=nomaf:rndsngl \
                             -qflttrap=ov:zero:inv \
                             -qfree=f90 \
                             -qhalt=W \
                             -qlanglvl=95pure \
                             -qmaxmem=-1 \
                             -qsuffix=f=f90:cpp=F90 \
                              ${INCLUDES} \
                              ${AIX_COMMON_FLAGS_DEBUG}" \
	           "FL_FLAGS= ${AIX_COMMON_FLAGS_DEBUG} \
                              ${LIBRARIES} \
                              -o" \
                   "ENDIAN=Big_Endian"

# -- Compiler settings for PRODUCTION builds
AIX_COMMON_FLAGS_PROD = -O3
AIX_FLAGS_PROD = "FC=${NAME_AIX}" \
                 "FL=${NAME_AIX}" \
                 "FC_FLAGS= -c \
                            -qdbg \
                            -qarch=pwr4 \
                            -qfree=f90 \
                            -qhalt=W \
                            -qlanglvl=95pure \
                            -qsuffix=f=f90:cpp=F90 \
                            -qstrict \
                            -NS32768 \
                            ${INCLUDES} \
                            ${AIX_COMMON_FLAGS_PROD}" \
                 "FL_FLAGS= ${AIX_COMMON_FLAGS_PROD} \
                            -lmass -lm \
                            ${LIBRARIES} \
                            -o" \
                 "ENDIAN=Big_Endian"

# -- Here set the DEFAULT AIX compiler flags
AIX_FLAGS = $(AIX_FLAGS_PROD)



#-------------------------------------------------------------------------------#
#                              -- Sun Fortran 95 --                             #
#-------------------------------------------------------------------------------#

# -- The compiler and linker name
NAME_SUNOS = f95

# -- Only one set of compiler flags
SUNOS_COMMON_FLAGS = 
SUNOS_FLAGS = "FC=${NAME_SUNOS}" \
	      "FL=${NAME_SUNOS}" \
	      "FC_FLAGS= -ansi \
                         -c \
                         -C \
                         -fsimple=0 \
                         -ftrap=overflow,division \
                         -g \
                         -w3 \
                         ${INCLUDES} \
                         ${SUNOS_COMMON_FLAGS}" \
	      "FL_FLAGS= ${SUNOS_COMMON_FLAGS} \
                         ${LIBRARIES} \
                         -o" \
              "ENDIAN=Big_Endian"

SUNOS_FLAGS_DEBUG = ${SUNOS_FLAGS)
SUNOS_FLAGS_PROD  = ${SUNOS_FLAGS)



#-------------------------------------------------------------------------------#
#                    -- SGI IRIX64 MIPSpro f90 compiler --                      #
#-------------------------------------------------------------------------------#

# -- The compiler and linker name
NAME_IRIX64 = f90

# -- Only one set of compiler flags for 64-bit build
IRIX64_COMMON_FLAGS = -64
IRIX64_FLAGS = "FC=${NAME_IRIX64}" \
	       "FL=${NAME_IRIX64}" \
	       "FC_FLAGS= -ansi \
                          -c \
                          -C \
                          -DEBUG:suppress=399,878 \
                          -fullwarn \
                          -g \
                          -bytereclen \
                          -u \
                          ${INCLUDES} \
                          ${IRIX64_COMMON_FLAGS}" \
	       "FL_FLAGS= ${IRIX64_COMMON_FLAGS} \
                          ${LIBRARIES} \
                          -o" \
               "ENDIAN=Big_Endian"

IRIX64_FLAGS_DEBUG = ${IRIX64_FLAGS)
IRIX64_FLAGS_PROD  = ${IRIX64_FLAGS)



#-------------------------------------------------------------------------------#
#                               -- Linux compilers --                           #
#-------------------------------------------------------------------------------#

# -------------------------------------------------
# Portland Group f95 compiler for linux
#
# NOTE: There are two sets of PGI flags.
#       DEBUG and PRODUCTION.
#       See LINUX_FLAGS_PGI definition for default.
# -------------------------------------------------

# -- The compiler and linker name
NAME_PGI = pgf95

# -- Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_PGI_DEBUG = -Kieee
LINUX_FLAGS_PGI_DEBUG = "FC=${NAME_PGI}" \
                        "FL=${NAME_PGI}" \
                        "FC_FLAGS= -c \
                                   -g \
                                   -byteswapio \
                                   -Ktrap=ovf,divz \
                                   -Mbounds \
                                   -Mchkstk \
                                   -Mdclchk \
                                   -Minform,inform \
                                   -Mnosave \
                                   -Mref_externals \
                                   -Mstandard \
                                   ${INCLUDES} \
                                   ${LINUX_COMMON_FLAGS_PGI_DEBUG}" \
                        "FL_FLAGS= ${LINUX_COMMON_FLAGS_PGI_DEBUG} \
                                   ${LIBRARIES} \
                                   -o" \
                        "ENDIAN=Little_Endian"

# -- Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_PGI_PROD =
LINUX_FLAGS_PGI_PROD = "FC=${NAME_PGI}" \
                       "FL=${NAME_PGI}" \
                       "FC_FLAGS= -c \
                                  -fast \
                                  -byteswapio \
                                  ${INCLUDES} \
                                  ${LINUX_COMMON_FLAGS_PGI_PROD}" \
                       "FL_FLAGS= ${LINUX_COMMON_FLAGS_PGI_PROD} \
                                  ${LIBRARIES} \
                                  -o" \
                       "ENDIAN=Little_Endian"

# -- Here set the DEFAULT PGI compiler flags
LINUX_FLAGS_PGI = $(LINUX_FLAGS_PGI_PROD)



# ---------------------------------------------------
# Intel f95 compiler for linux
#
# NOTE: There are two sets of Intel flags.
#       DEBUG and PRODUCTION.
#       See LINUX_FLAGS_INTEL definition for default.
# ---------------------------------------------------

# -- The compiler and linker name
NAME_INTEL = ifort

# -- Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_INTEL_DEBUG =
LINUX_FLAGS_INTEL_DEBUG = "FC=${NAME_INTEL}" \
                          "FL=${NAME_INTEL}" \
                          "FC_FLAGS= -c \
                                     -g \
                                     -check bounds \
                                     -convert big_endian \
                                     -e95 \
                                     -traceback \
                                     -warn errors \
                                     -free \
                                     -assume byterecl \
                                     -fpstkchk \
                                     -mp \
                                     ${INCLUDES} \
                                     ${LINUX_COMMON_FLAGS_DEBUG}" \
	                  "FL_FLAGS= ${LINUX_COMMON_FLAGS_DEBUG} \
                                     ${LIBRARIES} \
                                     -static-libcxa \
                                     -o" \
                          "ENDIAN=Little_Endian"

# -- Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_INTEL_PROD =
LINUX_FLAGS_INTEL_PROD = "FC=${NAME_INTEL}" \
	                 "FL=${NAME_INTEL}" \
	                 "FC_FLAGS= -c \
                                    -O2 \
                                    -convert big_endian \
                                    -warn errors \
                                    -free \
      	                            -assume byterecl \
                                    ${INCLUDES} \
                                    ${LINUX_COMMON_FLAGS_PROD}" \
                         "FL_FLAGS= ${LINUX_COMMON_FLAGS_PROD} \
                                    ${LIBRARIES} \
                                    -static-libcxa \
                                    -o" \
                         "ENDIAN=Little_Endian"

# -- Here set the DEFAULT Intel compiler flags
LINUX_FLAGS_INTEL = $(LINUX_FLAGS_INTEL_PROD)



# ---------------------------------------------------
# Lahey f95 compiler for linux
#
# NOTE: There are two sets of Lahey flags.
#       DEBUG and PRODUCTION.
#       See LINUX_FLAGS_LAHEY definition for default.
# ---------------------------------------------------

# -- The compiler and linker name
NAME_LAHEY = lf95

# -- Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_LAHEY_DEBUG =
LINUX_FLAGS_LAHEY_DEBUG = "FC=${NAME_LAHEY}" \
	                  "FL=${NAME_LAHEY}" \
	                  "FC_FLAGS= -c \
                                     -g \
                                     --chk aesu \
                                     --f95 \
	                             --trace \
                                     --trap \
                                     --ninfo --warn \
                                     ${INCLUDES} \
                                     ${LINUX_COMMON_FLAGS_LAHEY_DEBUG}" \
	                  "FL_FLAGS= ${LINUX_COMMON_FLAGS_LAHEY_DEBUG} \
                                     ${LIBRARIES} \
                                     -o" \
                          "ENDIAN=Little_Endian"

# -- Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_LAHEY_PROD =
LINUX_FLAGS_LAHEY_PROD = "FC=${NAME_LAHEY}" \
	                 "FL=${NAME_LAHEY}" \
	                 "FC_FLAGS= -c \
                                    --f95 \
	                            --o2 \
                                    --ninfo --warn \
                                    ${INCLUDES} \
                                    ${LINUX_COMMON_FLAGS_LAHEY_PROD}" \
                         "FL_FLAGS= ${LINUX_COMMON_FLAGS_LAHEY_PROD} \
                                    ${LIBRARIES} \
                                    -o" \
                         "ENDIAN=Little_Endian"

# -- Here set the DEFAULT Lahey compiler flags
LINUX_FLAGS_LAHEY = $(LINUX_FLAGS_LAHEY_PROD)


# -------------------------------------------------
# g95 compiler for linux
#
# NOTE: There are two sets of g95 flags.
#       DEBUG and PRODUCTION.
#       See LINUX_FLAGS_G95 definition for default.
# -------------------------------------------------

# -- The compiler and linker name
NAME_G95 = g95

# -- Compiler settings for DEBUG builds
LINUX_COMMON_FLAGS_G95_DEBUG =
LINUX_FLAGS_G95_DEBUG = "FC=${NAME_G95}" \
	                "FL=${NAME_G95}" \
	                "FC_FLAGS= -c \
                                   -fbounds-check \
                                   -fendian=big \
                                   -ffree-form \
                                   -fno-second-underscore \
                                   -ftrace=frame \
                                   -std=f95 \
	                           -Wall \
                                   ${INCLUDES} \
                                   ${LINUX_COMMON_FLAGS_G95_DEBUG}" \
                        "FL_FLAGS= ${LINUX_COMMON_FLAGS_G95_DEBUG} \
                                   ${LIBRARIES} \
                                   -o" \
                        "ENDIAN=Little_Endian"

# -- Compiler settings for PRODUCTION builds
LINUX_COMMON_FLAGS_G95_PROD =
LINUX_FLAGS_G95_PROD = "FC=${NAME_G95}" \
	               "FL=${NAME_G95}" \
	               "FC_FLAGS= -c \
                                  -O2 \
                                  -fendian=big \
                                  -ffree-form \
		                  -fno-second-underscore \
                                  -std=f95 \
                                  ${INCLUDES} \
                                  ${LINUX_COMMON_FLAGS_G95_PROD}" \
                       "FL_FLAGS= ${LINUX_COMMON_FLAGS_G95_PROD} \
                                  ${LIBRARIES} \
                                  -o" \
                       "ENDIAN=Little_Endian"


# -- Here set the DEFAULT Lahey compiler flags
LINUX_FLAGS_G95 = $(LINUX_FLAGS_G95_PROD)


# -----------------------------
# Absoft f90 compiler for linux
# -----------------------------

# -- The compiler and linker name
NAME_ABSOFT = f90

# -- Only one set of compiler flags
LINUX_COMMON_FLAGS_ABSOFT = 
LINUX_FLAGS_ABSOFT = "FC=${NAME_ABSOFT}" \
                     "FL=${NAME_ABSOFT}" \
                     "FC_FLAGS= -c \
                                -B80 \
                                -en \
                                -g \
                                -m0 \
                                ${INCLUDES} \
                                ${LINUX_COMMON_FLAGS_ABSOFT}" \
                     "FL_FLAGS= ${LINUX_COMMON_FLAGS_ABSOFT} \
                                ${LIBRARIES} \
                                -o" \
                     "ENDIAN=Little_Endian"

LINUX_FLAGS_ABSOFT_DEBUG = ${LINUX_FLAGS_ABSOFT)
LINUX_FLAGS_ABSOFT_PROD  = ${LINUX_FLAGS_ABSOFT)


# ---------------------------
# gfortran compiler for linux
# ---------------------------

# -- The compiler and linker name
NAME_GFORTRAN = gfortran

# -- Only one set of compiler flags
LINUX_COMMON_FLAGS_GFORTRAN =
LINUX_FLAGS_GFORTRAN = "FC=${NAME_GFORTRAN}" \
	               "FL=${NAME_GFORTRAN}" \
	               "FC_FLAGS= -c \
			          -fno-second-underscore \
	                          -static \
                                  -Wall \
                                  ${INCLUDES} \
                                  ${LINUX_COMMON_FLAGS_GFORTRAN}" \
	               "FL_FLAGS= ${LINUX_COMMON_FLAGS_GFORTRAN} \
                                  ${LIBRARIES} \
                                  -o" \
                       "ENDIAN=Little_Endian"

LINUX_FLAGS_GFORTRAN_DEBUG = ${LINUX_FLAGS_GFORTRAN)
LINUX_FLAGS_GFORTRAN_PROD  = ${LINUX_FLAGS_GFORTRAN)


# ---------------------------------------
# Define the default Linux compiler flags
# ---------------------------------------

#LINUX_FLAGS = $(LINUX_FLAGS_LAHEY)

#LINUX_FLAGS = $(LINUX_FLAGS_PGI)
LINUX_FLAGS = $(LINUX_FLAGS_INTEL)
#LINUX_FLAGS = $(LINUX_FLAGS_G95)
#LINUX_FLAGS = $(LINUX_FLAGS_ABSOFT)
#LINUX_FLAGS = $(LINUX_FLAGS_GFORTRAN)


#-------------------------------------------------------------------------------
#                          -- MODIFICATION HISTORY --
#-------------------------------------------------------------------------------
#
# $Id: make.macros,v 1.19 2004/12/10 21:46:59 paulv Exp $
#
# $Date: 2004/12/10 21:46:59 $
#
# $Revision: 1.19 $
#
# $Name:  $
#
# $State: Exp $
#
# $Log: make.macros,v $
# Revision 1.19  2004/12/10 21:46:59  paulv
# - Added some extra compiler switch options.
#
# Revision 1.18  2004/07/20 15:50:46  paulv
# - Made the Lahey compiler the Linux default.
#
# Revision 1.17  2004/07/02 21:24:32  paulv
# - Removed the "invalid" floating point traps from PGI and Sun.
# - Added g95 linux entry.
#
# Revision 1.16  2004/06/21 19:24:20  paulv
# - Added entries for Intel and Lahey linux f95 compilers.
#
# Revision 1.15  2004/03/09 17:28:38  paulv
# - Updated some compiler flag selections.
#
# Revision 1.14  2003/09/16 15:14:01  paulv
# - Added -Mnosave to PGI compiler compile switch list.
#
# Revision 1.13  2003/09/09 21:00:41  paulv
# - Added -qstrict and -NS32768 options to the SP prod list.
#
# Revision 1.12  2003/09/09 20:57:08  paulv
# - Added SP Production compile flag with scalar MASS library in link flags.
# - Removed the -Mprof flag from the PGI list.
#
# Revision 1.11  2003/04/08 22:35:28  paulv
# - Added SGI -DEBUG options.
#
# Revision 1.10  2003/02/12 19:27:42  paulv
# - Default for IRIX is now to generate 64-bit objects.
#
# Revision 1.9  2002/08/27 19:31:50  paulv
# - Temporarily removed the -Mbounds option for pgf90 as v4.0-2 apparently
#   generates spurious bounds exceptions.
#
# Revision 1.8  2002/04/08 17:32:40  paulv
# - Added macro definitions and rules for preprocessing .F90 files.
#
# Revision 1.7  2001/11/08 15:16:28  paulv
# - Replaced all the removed INVALID floating point exception specifiers.
# - Added the -ansi and -DEBUG:[option...] compiler options to the SGI list.
#
# Revision 1.6  2001/11/07 21:17:58  paulv
# - Removed invalid and underflow floating point exception flags from all
#   compiler flag macros. The underflow was for the same reason as described
#   in the previous log message. The invalid flag removal was to prevent
#   floating point exceptions occurring when using byte-swapping software.
#   Byte-swapping some "regular" numbers makes them appear invalid and thus
#   cause a core dump if the invalid flag is set.
#
# Revision 1.5  2001/09/27 19:51:10  paulv
# - Added header documentation.
# - Added some more comments regarding the "including" of precompiled
#   .mod files via the INCLUDES macro.
# - Removed the underflow trap from the -Ktrap options for the PGI compiler.
#   Including this check caused floating point exception errors in third
#   party software (LAPACK).
# - Added a generic Linux_FLAGS macros definition so if the linux compiler
#   changes the makefile itself doesn't need to be changed.
# - Added RCS keyword list.
#
# Revision 1.4 2001/09/13 14:55:48  paulv
# - Removed definitions for generic includes and libraries. Also removed
#   MOD_INCLUDES definition to prevent mod files being written to another
#   directory (in some compilers)
# - Added ENDIAN flag definition to the compiler/platform definitions.
# - Added floating point exception flags to the PGI compiler options.
# - Removed -qundef compiler option from AIX list. Using this option always
#   produced warnings on AIX systems that the compiler may reject standard
#   compliant code.
#
# Revision 1.3  2001/05/09 21:10:03  paulv
# - Added some new definitions and documentation.
#
# Revision 1.2  2000/07/26 20:48:31  paulv
# - Separated the common flags definitions from the platform definitions. It
#   appears you can't define and use macros in the same definitions statement.
# - Added LINK macro
#
# Revision 1.1  2000/06/08 19:30:24  paulv
# Initial checked in version
#
#
